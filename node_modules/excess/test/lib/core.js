// Generated by CoffeeScript 1.7.1

/*
    xs_core.coffee

    Copyright (C) 2013, 2014, Connected Sets

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as
    published by the Free Software Foundation, either version 3 of the
    License, or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

(function() {
  var Greedy, Pipelet, Set, XS, check, check_set_content, clone, expect, extend, log, slice, utils, xs;

  if (typeof require !== "undefined" && require !== null) {
    utils = require('./tests_utils.js');
  }

  expect = this.expect || utils.expect;

  clone = this.clone || utils.clone;

  check = this.check || utils.check;

  log = this.log || utils.log;

  xs = this.xs || utils.xs;

  XS = xs.XS;

  extend = XS.extend;

  slice = Array.prototype.slice;

  check_set_content = function(done, source, values) {
    return source._fetch_all(function(_values) {
      return check(done, function() {
        return expect(_values.sort(function(a, b) {
          return a.id - b.id;
        })).to.be.eql(values);
      });
    });
  };

  if (typeof require !== "undefined" && require !== null) {
    require('../../lib/code.js');
    require('../../lib/filter.js');
    require('../../lib/order.js');
    require('../../lib/aggregate.js');
    require('../../lib/join.js');
    require('../../lib/json.js');
  }

  Pipelet = XS.Pipelet;

  Greedy = XS.Greedy;

  Set = XS.Set;

  describe('XS test suite:', function() {
    it('XS should be defined:', function() {
      return expect(XS).to.exist;
    });
    describe('XS.extend():', function() {
      var o1, o2, o3, result, _o1, _o2, _o3;
      it('should be a function', function() {
        return expect(extend).to.be.a('function');
      });
      o1 = {
        id: 1,
        name: 'khalifa'
      };
      o2 = {
        email: 'knassik@gmail.com'
      };
      o3 = {
        country: 'Morocco',
        name: 'khalifa nassik',
        email: 'khalifan@gmail.com'
      };
      _o1 = clone(o1);
      _o2 = clone(o2);
      _o3 = clone(o3);
      result = void 0;
      it('should be identity, i.e. extend( object ) should be strictly equal to object', function() {
        result = extend(o1);
        return expect(result).to.be(o1);
      });
      it('should modify o1 in extend( o1, o2 )', function() {
        result = extend(o1, o2);
        return expect(o1).to.be.eql({
          id: 1,
          name: 'khalifa',
          email: 'knassik@gmail.com'
        });
      });
      it('should return o1', function() {
        return expect(result).to.be(o1);
      });
      it('should not modify o2', function() {
        return expect(o2).to.be.eql(_o2);
      });
      it('should modify o1 after extend( o1, o2, o3 )', function() {
        o1 = clone(_o1);
        result = extend(o1, o2, o3);
        return expect(o1).to.be.eql({
          id: 1,
          name: 'khalifa nassik',
          email: 'khalifan@gmail.com',
          country: 'Morocco'
        }) && expect(result).to.be(o1);
      });
      it('should not have modified o2', function() {
        return expect(o2).to.be.eql(_o2);
      });
      it('should not have modified o3', function() {
        return expect(o3).to.be.eql(_o3);
      });
      it('should return {} in extend( null )', function() {
        return expect(extend(null)).to.be.eql({});
      });
      it('should return {} in extend( undefined )', function() {
        return expect(extend(void 0)).to.be.eql({});
      });
      it('should return {} in extend( null, null )', function() {
        return expect(extend(null, null)).to.be.eql({});
      });
      it('should return {} in extend( undefined, undefined )', function() {
        return expect(extend(void 0, void 0)).to.be.eql({});
      });
      it('should return o3 clone in extend( null, null, null, o3, null )', function() {
        result = extend(null, null, null, o3, null);
        return expect(result).to.be.eql(o3) && expect(result).to.not.be(o3);
      });
      return it('should return o3 clone in extend( undefined, undefined, undefined, o3, undefined )', function() {
        result = extend(void 0, void 0, void 0, o3, void 0);
        return expect(result).to.be.eql(o3) && expect(result).to.not.be(o3);
      });
    });
    describe('XS.extend_2():', function() {
      var extend_2, o1, o2, result, _o1, _o2;
      extend_2 = XS.extend_2;
      it('should be a function', function() {
        return expect(extend_2).to.be.a('function');
      });
      it('should not be XS.extend()', function() {
        return expect(extend_2).to.not.be(XS.extend);
      });
      o1 = {
        id: 1,
        name: 'khalifa'
      };
      o2 = {
        email: 'knassik@gmail.com'
      };
      _o1 = clone(o1);
      _o2 = clone(o2);
      result = void 0;
      it('should be identity, i.e. extend_2( object ) should be strictly equal to object', function() {
        result = extend_2(o1);
        return expect(result).to.be(o1);
      });
      it('should modify o1 in extend_2( o1, o2 )', function() {
        result = extend_2(o1, o2);
        return expect(o1).to.be.eql({
          id: 1,
          name: 'khalifa',
          email: 'knassik@gmail.com'
        });
      });
      it('should return o1', function() {
        return expect(result).to.be(o1);
      });
      it('should not modify o2', function() {
        return expect(o2).to.be.eql(_o2);
      });
      it('should return object in extend_2( object, null )', function() {
        return expect(extend_2(o2, null)).to.be(o2);
      });
      it('should return object in extend_2( object, undefined )', function() {
        return expect(extend_2(o2, void 0)).to.be(o2);
      });
      it('should return null in extend_2( null )', function() {
        return expect(extend_2(null)).to.be(null);
      });
      it('should return undefined in extend_2( undefined )', function() {
        return expect(extend_2(void 0)).to.be(void 0);
      });
      it('should return null in extend_2( null, null )', function() {
        return expect(extend_2(null, null)).to.be(null);
      });
      it('should return undefined in extend_2( undefined, undefined )', function() {
        return expect(extend_2(void 0, void 0)).to.be(void 0);
      });
      it('should return null in extend_2( null, undefined )', function() {
        return expect(extend_2(null, void 0)).to.be(null);
      });
      it('should return undefined in extend_2( undefined, null )', function() {
        return expect(extend_2(void 0, null)).to.be(void 0);
      });
      it('should throw in extend_2( null, o2 )', function() {
        var f;
        f = function() {
          return extend_2(null, o2);
        };
        return expect(f).to.throwException();
      });
      return it('should throw in extend_2( undefined, o2 )', function() {
        var f;
        f = function() {
          return extend_2(void 0, o2);
        };
        return expect(f).to.throwException();
      });
    });
    describe('XS.subclass():', function() {
      var Animal, Snake, a, s, subclass;
      subclass = XS.subclass;
      it('subclass() should be a function', function() {
        return expect(subclass).to.be.a('function');
      });
      Animal = function(name) {
        return this.name = name;
      };
      a = new Animal('Sam');
      it('a should be an instance of Animal', function() {
        return expect(a).to.be.an(Animal);
      });
      Snake = function(name) {};
      subclass(Animal, Snake);
      s = new Snake("Barry the Snake");
      it('s should be an instance of Snake', function() {
        return expect(s).to.be.a(Snake);
      });
      it('s should be an instance of Animal', function() {
        return expect(s).to.be.an(Animal);
      });
      return it('a should not be an instance of Snake', function() {
        return expect(a).to.not.be.a(Snake);
      });
    });
    describe('XS.Code():', function() {
      var code, f, g, i, test;
      f = code = new XS.Code('Code Test')._function('f', null, []).add('var i')._for('i = -1', ' ++i < 10').end().add('return i').end().get();
      eval(code);
      i = f();
      it('f should be a function', function() {
        return expect(f).to.be.a('function');
      });
      it('i should be equal to 10', function() {
        return expect(i).to.be.eql(10);
      });
      test = 'a[ ++i ] === n';
      g = code = new XS.Code('Test unfolded while')._function('g', null, ['n'])._var(['a = [ 34, 65, 98, 8, 52, 10, 21, 13, 1, 90, 14 ]', 'l = a.length', 'i = -1']).unrolled_while('if ( ' + test, '|| ' + test, ') return i').add('return -1').end('').get();
      eval(code);
      it('the index of 34 should be 0', function() {
        return expect(g(34)).to.be.eql(0);
      });
      it('the index of 52 should be 4', function() {
        return expect(g(52)).to.be.eql(4);
      });
      it('the index of 90 should be 9', function() {
        return expect(g(90)).to.be.eql(9);
      });
      return it('the index of 1 should be 8', function() {
        return expect(g(1)).to.be.eql(8);
      });
    });
    describe('Pipelets Connections', function() {
      var greedy, lazy, source, values;
      values = [
        {
          id: 1
        }, {
          id: 2
        }
      ];
      source = new Pipelet();
      lazy = new Pipelet();
      greedy = xs.greedy();
      lazy._add_source(source);
      greedy._input._add_source(source._output);
      it('source should have lazy and greedy inputs as outputs', function() {
        return expect(source._output.destinations).to.be.eql([lazy._input, greedy._input]);
      });
      it('lazy should have source._output as its input', function() {
        return expect(lazy._input.source).to.be(source._output);
      });
      it('greedy should have source._output as its input', function() {
        return expect(greedy._input.source).to.be(source._output);
      });
      it('source query tree should have greedy as a subscriber in its top node', function() {
        return expect(source._output.tree.top).to.be.eql({
          branches: {},
          keys: [],
          subscribers: [greedy._input]
        });
      });
      it('should have fetched content into a set through a stateless pipelet', function() {
        var s;
        s = xs.set(values).pass_through().set();
        return expect(s.a).to.be.eql(values);
      });
      return it('should have fetched content into a set even if stateless pipelet is pluged last into upstream pipelet', function() {
        var p, s, s1;
        s = xs.set(values);
        p = xs.pass_through();
        s1 = p.set();
        s._output._add_destination(p._input);
        return expect(s1.a).to.be.eql(values);
      });
    });
    describe('XS.Set():', function() {
      var cars, cities, delayed_set, employee, set;
      set = xs.set();
      it('set should be a Set', function() {
        return expect(set).to.be.a(XS.Set);
      });
      it('should throw an exception if trying to initialize a set with an Object not instance of Array', function() {
        return expect(function() {
          return xs.set({});
        }).to.throwException();
      });
      cities = xs.set([
        {
          id: 1,
          name: "Marrakech",
          country: "Morocco"
        }, {
          id: 2,
          name: "Mountain View",
          country: "USA",
          state: "California"
        }, {
          id: 3,
          name: "Paris",
          country: "France"
        }
      ]);
      delayed_set = xs.set([
        {
          id: 1,
          value: 'delayed'
        }
      ]).delay(100).trace('Delayed Set').filter(function() {
        return true;
      }).set();
      cars = xs.set([
        {
          id: 1,
          brand: "Mercedes",
          model: "C Class"
        }, {
          id: 2,
          brand: "Mercedes",
          model: "S Class"
        }, {
          id: 3,
          brand: "BMW",
          model: "M Serie"
        }
      ], {
        key: ["id", "model"]
      }).set_flow('car').set();
      employee = xs.set([
        {
          id: 1,
          name: "Stephen C. Cox",
          salary: "$3000",
          customer_id: "222",
          order_id: "1222"
        }, {
          id: 2,
          name: "Josephin Tan",
          salary: "$1500",
          customer_id: "223",
          order_id: "1223"
        }, {
          id: 3,
          name: "Joyce Ming",
          salary: "$2000",
          customer_id: "224",
          order_id: "1224"
        }, {
          id: 4,
          name: "James A. Pentel",
          salary: "$1750",
          customer_id: "225",
          order_id: "1225"
        }, {
          id: 5,
          name: "Alex Frog",
          salary: "$3000",
          customer_id: "226",
          order_id: "1226"
        }, {
          id: 6,
          name: "Tim Hancook",
          salary: "$1500",
          customer_id: "227",
          order_id: "1227"
        }
      ]);
      describe('Delayed set:', function() {
        return it('Delayed set (100 ms) should eventually equal its source values', function(done) {
          return delayed_set._fetch_all(function(values) {
            return check(done, function() {
              return expect(values).to.be.eql([
                {
                  id: 1,
                  value: 'delayed'
                }
              ]);
            });
          });
        });
      });
      describe('_fetch_all():', function() {
        it('set._fetch_all() should be empty', function(done) {
          return set._fetch_all(function(values) {
            return check(done, function() {
              return expect(values).to.be.eql([]);
            });
          });
        });
        return it('cars._fetch_all() should be equal to result', function(done) {
          return cars._fetch_all(function(values) {
            return check(done, function() {
              return expect(values).to.be.eql([
                {
                  flow: "car",
                  id: 1,
                  brand: "Mercedes",
                  model: "C Class"
                }, {
                  flow: "car",
                  id: 2,
                  brand: "Mercedes",
                  model: "S Class"
                }, {
                  flow: "car",
                  id: 3,
                  brand: "BMW",
                  model: "M Serie"
                }
              ]);
            });
          });
        });
      });
      describe('add():', function() {
        return it('should contain Berlin after adding it', function(done) {
          cities._add([
            {
              id: 4,
              name: "Berlin",
              country: "Germany"
            }
          ]);
          return cities._fetch_all(function(values) {
            return check(done, function() {
              return expect(values).to.be.eql([
                {
                  id: 1,
                  name: "Marrakech",
                  country: "Morocco"
                }, {
                  id: 2,
                  name: "Mountain View",
                  country: "USA",
                  state: "California"
                }, {
                  id: 3,
                  name: "Paris",
                  country: "France"
                }, {
                  id: 4,
                  name: "Berlin",
                  country: "Germany"
                }
              ]);
            });
          });
        });
      });
      describe('index_of():', function() {
        it('set.index_of( { id: 2 } ) should be -1: empty set', function() {
          return expect(set.index_of({
            id: 2
          })).to.be.eql(-1);
        });
        it('cities.index_of( { id: 2 } ) should be 1', function() {
          return expect(cities.index_of({
            id: 2
          })).to.be.eql(1);
        });
        it('cars.index_of( { id: 2, model: "S Class" } ) should be 1', function() {
          return expect(cars.index_of({
            id: 2,
            model: "S Class"
          })).to.be.eql(1);
        });
        return it('cars.index_of( { id: 3, model: "S Class" } ) should be -1: not found', function() {
          return expect(cars.index_of({
            id: 3,
            model: "S Class"
          })).to.be.eql(-1);
        });
      });
      describe('remove():', function() {
        it('set._remove( [ { id: 1 } ] )._add( [ { id: 2 } ] ) should have id 2', function(done) {
          return set._remove([
            {
              id: 1
            }
          ])._add([
            {
              id: 2
            }
          ])._fetch_all(function(values) {
            return check(done, function() {
              return expect(values).to.be.eql([
                {
                  id: 2
                }
              ]);
            });
          });
        });
        it('should have an one value in the anti-state', function() {
          return expect(set.b).to.be.eql([
            {
              id: 1
            }
          ]);
        });
        it('adding back this element should not change the set', function(done) {
          return set._add([
            {
              id: 1
            }
          ])._fetch_all(function(values) {
            return check(done, function() {
              return expect(values).to.be.eql([
                {
                  id: 2
                }
              ]);
            });
          });
        });
        it('anti-state should be empty again', function() {
          return expect(set.b).to.be.eql([]);
        });
        it('removing id 2 should left set empty again', function(done) {
          return set._remove([
            {
              id: 2
            }
          ])._fetch_all(function(values) {
            return check(done, function() {
              return expect(values).to.be.eql([]);
            });
          });
        });
        it('employee._remove( [ { id: 15 } ] ) should be equal to employee: record with id 15 doesn\'t exist', function(done) {
          employee._remove([
            {
              id: 15
            }
          ]);
          return employee._fetch_all(function(values) {
            return check(done, function() {
              return expect(values).to.be.eql([
                {
                  id: 1,
                  name: "Stephen C. Cox",
                  salary: "$3000",
                  customer_id: "222",
                  order_id: "1222"
                }, {
                  id: 2,
                  name: "Josephin Tan",
                  salary: "$1500",
                  customer_id: "223",
                  order_id: "1223"
                }, {
                  id: 3,
                  name: "Joyce Ming",
                  salary: "$2000",
                  customer_id: "224",
                  order_id: "1224"
                }, {
                  id: 4,
                  name: "James A. Pentel",
                  salary: "$1750",
                  customer_id: "225",
                  order_id: "1225"
                }, {
                  id: 5,
                  name: "Alex Frog",
                  salary: "$3000",
                  customer_id: "226",
                  order_id: "1226"
                }, {
                  id: 6,
                  name: "Tim Hancook",
                  salary: "$1500",
                  customer_id: "227",
                  order_id: "1227"
                }
              ]);
            });
          });
        });
        it('employee._remove( [ { id: 1 } ] ) should be equal to result: first record', function(done) {
          employee._remove([
            {
              id: 1
            }
          ]);
          return employee._fetch_all(function(values) {
            return check(done, function() {
              return expect(values).to.be.eql([
                {
                  id: 2,
                  name: "Josephin Tan",
                  salary: "$1500",
                  customer_id: "223",
                  order_id: "1223"
                }, {
                  id: 3,
                  name: "Joyce Ming",
                  salary: "$2000",
                  customer_id: "224",
                  order_id: "1224"
                }, {
                  id: 4,
                  name: "James A. Pentel",
                  salary: "$1750",
                  customer_id: "225",
                  order_id: "1225"
                }, {
                  id: 5,
                  name: "Alex Frog",
                  salary: "$3000",
                  customer_id: "226",
                  order_id: "1226"
                }, {
                  id: 6,
                  name: "Tim Hancook",
                  salary: "$1500",
                  customer_id: "227",
                  order_id: "1227"
                }
              ]);
            });
          });
        });
        it('employee._remove( [ { id: 5 } ] ) should be equal to result: record in the middle', function(done) {
          employee._remove([
            {
              id: 5
            }
          ]);
          return employee._fetch_all(function(values) {
            return check(done, function() {
              return expect(values).to.be.eql([
                {
                  id: 2,
                  name: "Josephin Tan",
                  salary: "$1500",
                  customer_id: "223",
                  order_id: "1223"
                }, {
                  id: 3,
                  name: "Joyce Ming",
                  salary: "$2000",
                  customer_id: "224",
                  order_id: "1224"
                }, {
                  id: 4,
                  name: "James A. Pentel",
                  salary: "$1750",
                  customer_id: "225",
                  order_id: "1225"
                }, {
                  id: 6,
                  name: "Tim Hancook",
                  salary: "$1500",
                  customer_id: "227",
                  order_id: "1227"
                }
              ]);
            });
          });
        });
        return it('employee._remove( [ { id: 6 } ] ) should be equal to result: last record', function(done) {
          return employee._remove([
            {
              id: 6
            }
          ])._fetch_all(function(values) {
            return check(done, function() {
              return expect(values.sort(function(a, b) {
                return a.id > b.id;
              })).to.be.eql([
                {
                  id: 2,
                  name: "Josephin Tan",
                  salary: "$1500",
                  customer_id: "223",
                  order_id: "1223"
                }, {
                  id: 3,
                  name: "Joyce Ming",
                  salary: "$2000",
                  customer_id: "224",
                  order_id: "1224"
                }, {
                  id: 4,
                  name: "James A. Pentel",
                  salary: "$1750",
                  customer_id: "225",
                  order_id: "1225"
                }
              ]);
            });
          });
        });
      });
      describe('_update():', function() {
        it('set._update( [ [ { id: 1 }, { id: 1, v: "test" } ] ] ) should be equal to set: empty set', function(done) {
          return set._update([
            [
              {
                id: 1
              }, {
                id: 1,
                v: 'test'
              }
            ]
          ])._fetch_all(function(values) {
            return check(done, function() {
              return expect(values).to.be.eql([]);
            });
          });
        });
        it('employee with add, _update and remove inverted should end with update done', function(done) {
          return employee._remove([
            {
              id: 15,
              name: "Khalifa P Nassik",
              salary: "$2500"
            }
          ])._update([
            [
              {
                id: 15,
                name: "Khalifa P Nassik",
                salary: "$1500"
              }, {
                id: 15,
                name: "Khalifa P Nassik",
                salary: "$2500"
              }
            ]
          ])._add([
            {
              id: 15,
              name: "Khalifa P Nassik",
              salary: "$1500"
            }
          ])._fetch_all(function(values) {
            return check(done, function() {
              return expect(values.sort(function(a, b) {
                return a.id > b.id;
              })).to.be.eql([
                {
                  id: 2,
                  name: "Josephin Tan",
                  salary: "$1500",
                  customer_id: "223",
                  order_id: "1223"
                }, {
                  id: 3,
                  name: "Joyce Ming",
                  salary: "$2000",
                  customer_id: "224",
                  order_id: "1224"
                }, {
                  id: 4,
                  name: "James A. Pentel",
                  salary: "$1750",
                  customer_id: "225",
                  order_id: "1225"
                }
              ]);
            });
          });
        });
        return it('employee._update( [ [ { id: 3 }, { id: 3, name: "Khalifa P Nassik", Salary: "$1500", customer_id: "224", order_id: "1224" ] ] } ) should be equal to result', function(done) {
          employee._update([
            [
              {
                id: 3
              }, {
                id: 3,
                name: "Khalifa P Nassik",
                Salary: "$1500",
                customer_id: "224",
                order_id: "1224"
              }
            ]
          ]);
          return employee._fetch_all(function(values) {
            return check(done, function() {
              return expect(values.sort(function(a, b) {
                return a.id > b.id;
              })).to.be.eql([
                {
                  id: 2,
                  name: "Josephin Tan",
                  salary: "$1500",
                  customer_id: "223",
                  order_id: "1223"
                }, {
                  id: 3,
                  name: "Khalifa P Nassik",
                  Salary: "$1500",
                  customer_id: "224",
                  order_id: "1224"
                }, {
                  id: 4,
                  name: "James A. Pentel",
                  salary: "$1750",
                  customer_id: "225",
                  order_id: "1225"
                }
              ]);
            });
          });
        });
      });
      describe('filter():', function() {
        var cities_in_usa, is_in_usa;
        is_in_usa = function(city, c, cities) {
          return city.country === 'USA';
        };
        cities_in_usa = cities.filter(is_in_usa).set();
        it('cities_in_usa should be a Pipelet', function() {
          return expect(cities_in_usa).to.be.an(XS.Pipelet);
        });
        it('cities_in_usa should only contain cities in USA', function(done) {
          return cities_in_usa._fetch_all(function(values) {
            return check(done, function() {
              return expect(values).to.be.eql([
                {
                  id: 2,
                  name: "Mountain View",
                  country: "USA",
                  state: "California"
                }
              ]);
            });
          });
        });
        describe('add():', function() {
          it('cities_in_usa should show one more city after adding New York to cities', function(done) {
            cities._add([
              {
                id: 5,
                name: "New York",
                country: "USA",
                state: "New York"
              }
            ]);
            return cities_in_usa._fetch_all(function(values) {
              return check(done, function() {
                return expect(values).to.be.eql([
                  {
                    id: 2,
                    name: "Mountain View",
                    country: "USA",
                    state: "California"
                  }, {
                    id: 5,
                    name: "New York",
                    country: "USA",
                    state: "New York"
                  }
                ]);
              });
            });
          });
          return it('cities_in_usa should show only one more city after adding Casablanca and Huston', function(done) {
            cities._add([
              {
                id: 6,
                name: "Casablanca",
                country: "Morocco"
              }, {
                id: 7,
                name: 'Huston',
                country: 'USA',
                state: 'Texas'
              }
            ]);
            return cities_in_usa._fetch_all(function(values) {
              return check(done, function() {
                return expect(values).to.be.eql([
                  {
                    id: 2,
                    name: "Mountain View",
                    country: "USA",
                    state: "California"
                  }, {
                    id: 5,
                    name: "New York",
                    country: "USA",
                    state: "New York"
                  }, {
                    id: 7,
                    name: "Huston",
                    country: "USA",
                    state: "Texas"
                  }
                ]);
              });
            });
          });
        });
        describe('_update', function() {
          it('cities_in_usa should be updated when updating "New York" to "New York City" in cities', function(done) {
            cities._update([
              [
                {
                  id: 5,
                  name: "New York",
                  country: "USA",
                  state: "New York"
                }, {
                  id: 5,
                  name: "New York City",
                  country: "USA",
                  state: "New York"
                }
              ]
            ]);
            return cities_in_usa._fetch_all(function(values) {
              return check(done, function() {
                return expect(values.sort(function(a, b) {
                  return a.id > b.id;
                })).to.be.eql([
                  {
                    id: 2,
                    name: "Mountain View",
                    country: "USA",
                    state: "California"
                  }, {
                    id: 5,
                    name: "New York City",
                    country: "USA",
                    state: "New York"
                  }, {
                    id: 7,
                    name: "Huston",
                    country: "USA",
                    state: "Texas"
                  }
                ]);
              });
            });
          });
          it('cities_in_usa should remove Huston after it be updated to Venice in cities', function(done) {
            cities._update([
              [
                {
                  id: 7,
                  name: "Huston",
                  country: "USA",
                  state: "Texas"
                }, {
                  id: 7,
                  name: "Venice",
                  country: "Italy"
                }
              ]
            ]);
            return cities_in_usa._fetch_all(function(values) {
              return check(done, function() {
                return expect(values.sort(function(a, b) {
                  return a.id > b.id;
                })).to.be.eql([
                  {
                    id: 2,
                    name: "Mountain View",
                    country: "USA",
                    state: "California"
                  }, {
                    id: 5,
                    name: "New York City",
                    country: "USA",
                    state: "New York"
                  }
                ]);
              });
            });
          });
          it('should add Detroit in cities_in_usa, after Paris is updated to Detroit in cities', function(done) {
            cities._update([
              [
                {
                  id: 3,
                  name: "Paris",
                  country: "France"
                }, {
                  id: 8,
                  name: "Detroit",
                  country: "USA",
                  state: "Michigan"
                }
              ]
            ]);
            return cities_in_usa._fetch_all(function(values) {
              return check(done, function() {
                return expect(values.sort(function(a, b) {
                  return a.id > b.id;
                })).to.be.eql([
                  {
                    id: 2,
                    name: "Mountain View",
                    country: "USA",
                    state: "California"
                  }, {
                    id: 5,
                    name: "New York City",
                    country: "USA",
                    state: "New York"
                  }, {
                    id: 8,
                    name: "Detroit",
                    country: "USA",
                    state: "Michigan"
                  }
                ]);
              });
            });
          });
          return it('should not change cities_in_usa after Paris is updated to Madrid in cities, resulting in Paris added to cities anti-state', function(done) {
            cities._update([
              [
                {
                  id: 3,
                  name: "Paris",
                  country: "France"
                }, {
                  id: 9,
                  name: "Madrid",
                  country: "Spain"
                }
              ]
            ]);
            return cities_in_usa._fetch_all(function(values) {
              return check(done, function() {
                return expect(values.sort(function(a, b) {
                  return a.id > b.id;
                })).to.be.eql([
                  {
                    id: 2,
                    name: "Mountain View",
                    country: "USA",
                    state: "California"
                  }, {
                    id: 5,
                    name: "New York City",
                    country: "USA",
                    state: "New York"
                  }, {
                    id: 8,
                    name: "Detroit",
                    country: "USA",
                    state: "Michigan"
                  }
                ]);
              });
            });
          });
        });
        return describe('remove()', function() {
          it('cities_in_usa should be equal to result: cities._remove( [ { id: 2, name: "Mountain View", country: "USA", state: "California" } ] )', function(done) {
            cities._remove([
              {
                id: 2,
                name: "Mountain View",
                country: "USA",
                state: "California"
              }
            ]);
            return cities_in_usa._fetch_all(function(values) {
              return check(done, function() {
                return expect(values.sort(function(a, b) {
                  return a.id > b.id;
                })).to.be.eql([
                  {
                    id: 5,
                    name: "New York City",
                    country: "USA",
                    state: "New York"
                  }, {
                    id: 8,
                    name: "Detroit",
                    country: "USA",
                    state: "Michigan"
                  }
                ]);
              });
            });
          });
          return it('cities_in_usa should be equal to result: cities._remove( [ { id: 7, name: "Venice", country: "Italy" } ] )', function(done) {
            cities._remove([
              {
                id: 7,
                name: "Venice",
                country: "Italy"
              }
            ]);
            return cities_in_usa._fetch_all(function(values) {
              return check(done, function() {
                return expect(values.sort(function(a, b) {
                  return a.id > b.id;
                })).to.be.eql([
                  {
                    id: 5,
                    name: "New York City",
                    country: "USA",
                    state: "New York"
                  }, {
                    id: 8,
                    name: "Detroit",
                    country: "USA",
                    state: "Michigan"
                  }
                ]);
              });
            });
          });
        });
      });
      describe('filter() from static countries query filtering cities from USA and Morocco:', function() {
        var countries;
        countries = [
          {
            country: 'USA'
          }, {
            country: 'Morocco'
          }
        ];
        it('should contain no city when no country is provided', function(done) {
          return check_set_content(done, cities.filter([]).trace('filter_no_country').set(), []);
        });
        it('should contain all cities when an empty or-term is provided', function(done) {
          return check_set_content(done, cities.filter([{}]).trace('filter_no_country').set(), [
            {
              id: 1,
              name: "Marrakech",
              country: "Morocco"
            }, {
              id: 4,
              name: "Berlin",
              country: "Germany"
            }, {
              id: 5,
              name: "New York City",
              country: "USA",
              state: "New York"
            }, {
              id: 6,
              name: "Casablanca",
              country: "Morocco"
            }, {
              id: 8,
              name: "Detroit",
              country: "USA",
              state: "Michigan"
            }, {
              id: 9,
              name: "Madrid",
              country: "Spain"
            }
          ]);
        });
        it('should only contain cities from USA and Morocco', function(done) {
          return check_set_content(done, cities.filter(countries).set(), [
            {
              id: 1,
              name: "Marrakech",
              country: "Morocco"
            }, {
              id: 5,
              name: "New York City",
              country: "USA",
              state: "New York"
            }, {
              id: 6,
              name: "Casablanca",
              country: "Morocco"
            }, {
              id: 8,
              name: "Detroit",
              country: "USA",
              state: "Michigan"
            }
          ]);
        });
        return it('should only contain cities from USA and Morocco even through a set()', function(done) {
          return check_set_content(done, cities.filter(countries).set(), [
            {
              id: 1,
              name: "Marrakech",
              country: "Morocco"
            }, {
              id: 5,
              name: "New York City",
              country: "USA",
              state: "New York"
            }, {
              id: 6,
              name: "Casablanca",
              country: "Morocco"
            }, {
              id: 8,
              name: "Detroit",
              country: "USA",
              state: "Michigan"
            }
          ]);
        });
      });
      describe('flow() static queries', function() {
        var comments, groups, multiflow, posts, users;
        multiflow = xs.set([
          {
            flow: "user",
            id: 1
          }, {
            flow: "user",
            id: 2
          }, {
            flow: "user",
            id: 3
          }, {
            flow: "group",
            id: 1
          }, {
            flow: "group",
            id: 2
          }, {
            flow: "group",
            id: 3
          }, {
            flow: "group",
            id: 4
          }, {
            flow: "post",
            id: 1
          }, {
            flow: "post",
            id: 2
          }, {
            flow: "post",
            id: 3
          }, {
            flow: "post",
            id: 4
          }, {
            flow: "post",
            id: 5
          }, {
            flow: "comment",
            id: 1
          }, {
            flow: "comment",
            id: 2
          }, {
            flow: "comment",
            id: 3
          }, {
            flow: "comment",
            id: 4
          }
        ], {
          key: ['flow', 'id']
        });
        users = multiflow.flow("user").set();
        groups = multiflow.flow("group").set();
        posts = multiflow.flow("post").set();
        comments = multiflow.flow("comment").set();
        it('should filter a multiflow by "users"', function(done) {
          return check_set_content(done, users, [
            {
              flow: "user",
              id: 1
            }, {
              flow: "user",
              id: 2
            }, {
              flow: "user",
              id: 3
            }
          ]);
        });
        it('should filter a multiflow by "groups"', function(done) {
          return check_set_content(done, groups, [
            {
              flow: "group",
              id: 1
            }, {
              flow: "group",
              id: 2
            }, {
              flow: "group",
              id: 3
            }, {
              flow: "group",
              id: 4
            }
          ]);
        });
        it('should filter a multiflow by "posts"', function(done) {
          return check_set_content(done, posts, [
            {
              flow: "post",
              id: 1
            }, {
              flow: "post",
              id: 2
            }, {
              flow: "post",
              id: 3
            }, {
              flow: "post",
              id: 4
            }, {
              flow: "post",
              id: 5
            }
          ]);
        });
        it('should filter a multiflow by "comments"', function(done) {
          return check_set_content(done, comments, [
            {
              flow: "comment",
              id: 1
            }, {
              flow: "comment",
              id: 2
            }, {
              flow: "comment",
              id: 3
            }, {
              flow: "comment",
              id: 4
            }
          ]);
        });
        it('should allow to add users', function(done) {
          multiflow._add([
            {
              flow: "user",
              id: 4
            }, {
              flow: "user",
              id: 5
            }
          ]);
          return check_set_content(done, users, [
            {
              flow: "user",
              id: 1
            }, {
              flow: "user",
              id: 2
            }, {
              flow: "user",
              id: 3
            }, {
              flow: "user",
              id: 4
            }, {
              flow: "user",
              id: 5
            }
          ]);
        });
        it('should allow to remove comments', function(done) {
          multiflow._remove([
            {
              flow: "comment",
              id: 2
            }, {
              flow: "comment",
              id: 3
            }
          ]);
          return check_set_content(done, comments, [
            {
              flow: "comment",
              id: 1
            }, {
              flow: "comment",
              id: 4
            }
          ]);
        });
        return it('should not have modified posts', function(done) {
          return check_set_content(done, posts, [
            {
              flow: "post",
              id: 1
            }, {
              flow: "post",
              id: 2
            }, {
              flow: "post",
              id: 3
            }, {
              flow: "post",
              id: 4
            }, {
              flow: "post",
              id: 5
            }
          ]);
        });
      });
      describe('filter() from dynamic countries query:', function() {
        var cities_from_countries, countries;
        countries = xs.set([
          {
            country: 'USA'
          }
        ], {
          key: ['country']
        });
        cities_from_countries = cities.filter(countries).trace('cities from countries').set([]);
        it('cities_from_countries should be a Pipelet', function() {
          return expect(cities_from_countries).to.be.an(XS.Pipelet);
        });
        it('cities_from_countries should only contain cities in USA', function(done) {
          return cities_from_countries._fetch_all(function(values) {
            return check(done, function() {
              return expect(values).to.be.eql([
                {
                  id: 5,
                  name: "New York City",
                  country: "USA",
                  state: "New York"
                }, {
                  id: 8,
                  name: "Detroit",
                  country: "USA",
                  state: "Michigan"
                }
              ]);
            });
          });
        });
        it('after updating Detroit to Chicago, cities_from_countries should show Chicago', function(done) {
          cities._update([
            [
              {
                id: 8,
                name: "Detroit",
                country: "USA",
                state: "Michigan"
              }, {
                id: 8,
                name: "Chicago",
                country: "USA"
              }
            ]
          ]);
          return cities_from_countries._fetch_all(function(values) {
            return check(done, function() {
              return expect(values).to.be.eql([
                {
                  id: 5,
                  name: "New York City",
                  country: "USA",
                  state: "New York"
                }, {
                  id: 8,
                  name: "Chicago",
                  country: "USA"
                }
              ]);
            });
          });
        });
        it('after updating countries to get countries from Morocco, cities_from_countries should have all and only cities from Morocco', function(done) {
          countries._update([
            [
              {
                country: 'USA'
              }, {
                country: 'Morocco'
              }
            ]
          ]);
          return cities_from_countries._fetch_all(function(values) {
            return check(done, function() {
              return expect(values).to.be.eql([
                {
                  id: 1,
                  name: "Marrakech",
                  country: "Morocco"
                }, {
                  id: 6,
                  name: "Casablanca",
                  country: "Morocco"
                }
              ]);
            });
          });
        });
        it('after adding San Francisco to cities, cities_from_countries should not change', function(done) {
          cities._add([
            {
              id: 11,
              name: 'San Francisco',
              country: "USA"
            }
          ]);
          return cities_from_countries._fetch_all(function(values) {
            return check(done, function() {
              return expect(values).to.be.eql([
                {
                  id: 1,
                  name: "Marrakech",
                  country: "Morocco"
                }, {
                  id: 6,
                  name: "Casablanca",
                  country: "Morocco"
                }
              ]);
            });
          });
        });
        it('after adding Germany in countries, cities_from_countries should have cities from Morocco and Germany', function(done) {
          countries._add([
            {
              country: 'Germany'
            }
          ]);
          return cities_from_countries._fetch_all(function(values) {
            return check(done, function() {
              return expect(values.sort(function(a, b) {
                return a.id - b.id;
              })).to.be.eql([
                {
                  id: 1,
                  name: "Marrakech",
                  country: "Morocco"
                }, {
                  id: 4,
                  name: "Berlin",
                  country: "Germany"
                }, {
                  id: 6,
                  name: "Casablanca",
                  country: "Morocco"
                }
              ]);
            });
          });
        });
        it('after adding France and USA to countries, cities_from_countries should have cities from Morocco, Germany, and the USA', function(done) {
          countries._add([
            {
              country: 'France'
            }, {
              country: 'USA'
            }
          ]);
          return cities_from_countries._fetch_all(function(values) {
            return check(done, function() {
              expect(countries.a).to.be.eql([
                {
                  country: 'Morocco'
                }, {
                  country: 'Germany'
                }, {
                  country: 'France'
                }, {
                  country: 'USA'
                }
              ]);
              return expect(values.sort(function(a, b) {
                return a.id - b.id;
              })).to.be.eql([
                {
                  id: 1,
                  name: "Marrakech",
                  country: "Morocco"
                }, {
                  id: 4,
                  name: "Berlin",
                  country: "Germany"
                }, {
                  id: 5,
                  name: "New York City",
                  country: "USA",
                  state: "New York"
                }, {
                  id: 6,
                  name: "Casablanca",
                  country: "Morocco"
                }, {
                  id: 8,
                  name: "Chicago",
                  country: "USA"
                }, {
                  id: 11,
                  name: 'San Francisco',
                  country: "USA"
                }
              ]);
            });
          });
        });
        it('after adding Paris to cities, cities_from_countries should have cities from Morocco, Germany, France and the USA', function(done) {
          cities._add([
            {
              id: 9,
              name: "Paris",
              country: "France"
            }
          ]);
          return cities_from_countries._fetch_all(function(values) {
            return check(done, function() {
              expect(cities.index_of({
                id: 9
              })).to.not.be.eql(-1);
              return expect(values.sort(function(a, b) {
                return a.id - b.id;
              })).to.be.eql([
                {
                  id: 1,
                  name: "Marrakech",
                  country: "Morocco"
                }, {
                  id: 4,
                  name: "Berlin",
                  country: "Germany"
                }, {
                  id: 5,
                  name: "New York City",
                  country: "USA",
                  state: "New York"
                }, {
                  id: 6,
                  name: "Casablanca",
                  country: "Morocco"
                }, {
                  id: 8,
                  name: "Chicago",
                  country: "USA"
                }, {
                  id: 9,
                  name: "Paris",
                  country: "France"
                }, {
                  id: 11,
                  name: 'San Francisco',
                  country: "USA"
                }
              ]);
            });
          });
        });
        it('should add a state to Chicago after updating Chicago s state to Illinois', function(done) {
          cities._update([
            [
              {
                id: 8,
                name: "Chicago",
                country: "USA"
              }, {
                id: 8,
                name: "Chicago",
                country: "USA",
                state: "Illinois"
              }
            ]
          ]);
          return cities_from_countries._fetch_all(function(values) {
            return check(done, function() {
              expect(cities.index_of({
                id: 9
              })).to.not.be.eql(-1);
              return expect(values.sort(function(a, b) {
                return a.id - b.id;
              })).to.be.eql([
                {
                  id: 1,
                  name: "Marrakech",
                  country: "Morocco"
                }, {
                  id: 4,
                  name: "Berlin",
                  country: "Germany"
                }, {
                  id: 5,
                  name: "New York City",
                  country: "USA",
                  state: "New York"
                }, {
                  id: 6,
                  name: "Casablanca",
                  country: "Morocco"
                }, {
                  id: 8,
                  name: "Chicago",
                  country: "USA",
                  state: "Illinois"
                }, {
                  id: 9,
                  name: "Paris",
                  country: "France"
                }, {
                  id: 11,
                  name: 'San Francisco',
                  country: "USA"
                }
              ]);
            });
          });
        });
        it('after removing Germany from countries, cities_from_countries should have Berlin removed', function(done) {
          countries._remove([
            {
              country: "Germany"
            }
          ]);
          return cities_from_countries._fetch_all(function(values) {
            return check(done, function() {
              expect(countries.index_of({
                country: "Germany"
              })).to.be.eql(-1);
              return expect(values.sort(function(a, b) {
                return a.id - b.id;
              })).to.be.eql([
                {
                  id: 1,
                  name: "Marrakech",
                  country: "Morocco"
                }, {
                  id: 5,
                  name: "New York City",
                  country: "USA",
                  state: "New York"
                }, {
                  id: 6,
                  name: "Casablanca",
                  country: "Morocco"
                }, {
                  id: 8,
                  name: "Chicago",
                  country: "USA",
                  state: "Illinois"
                }, {
                  id: 9,
                  name: "Paris",
                  country: "France"
                }, {
                  id: 11,
                  name: 'San Francisco',
                  country: "USA"
                }
              ]);
            });
          });
        });
        return it('after removing Chicago from cities, cities_from_countries should have it removed as well', function(done) {
          cities._remove([
            {
              id: 8,
              name: "Chicago",
              country: "USA",
              state: "Illinois"
            }
          ]);
          return cities_from_countries._fetch_all(function(values) {
            return check(done, function() {
              expect(cities.index_of({
                id: 8
              })).to.be.eql(-1);
              return expect(values.sort(function(a, b) {
                return a.id - b.id;
              })).to.be.eql([
                {
                  id: 1,
                  name: "Marrakech",
                  country: "Morocco"
                }, {
                  id: 5,
                  name: "New York City",
                  country: "USA",
                  state: "New York"
                }, {
                  id: 6,
                  name: "Casablanca",
                  country: "Morocco"
                }, {
                  id: 9,
                  name: "Paris",
                  country: "France"
                }, {
                  id: 11,
                  name: 'San Francisco',
                  country: "USA"
                }
              ]);
            });
          });
        });
      });
      describe('_notify():', function() {
        it('add(): employee._notify( transaction ) should be equal to result', function(done) {
          employee._notify([
            {
              action: "add",
              objects: [
                {
                  id: 7,
                  name: "John Morrison",
                  salary: "$3000",
                  customer_id: "228",
                  order_id: "1228"
                }, {
                  id: 8,
                  name: "Thomas Buch",
                  salary: "$2500",
                  customer_id: "229",
                  order_id: "1229"
                }
              ]
            }
          ]);
          return employee._fetch_all(function(values) {
            return check(done, function() {
              return expect(values.sort(function(a, b) {
                return a.id > b.id;
              })).to.be.eql([
                {
                  id: 2,
                  name: "Josephin Tan",
                  salary: "$1500",
                  customer_id: "223",
                  order_id: "1223"
                }, {
                  id: 3,
                  name: "Khalifa P Nassik",
                  Salary: "$1500",
                  customer_id: "224",
                  order_id: "1224"
                }, {
                  id: 4,
                  name: "James A. Pentel",
                  salary: "$1750",
                  customer_id: "225",
                  order_id: "1225"
                }, {
                  id: 7,
                  name: "John Morrison",
                  salary: "$3000",
                  customer_id: "228",
                  order_id: "1228"
                }, {
                  id: 8,
                  name: "Thomas Buch",
                  salary: "$2500",
                  customer_id: "229",
                  order_id: "1229"
                }
              ]);
            });
          });
        });
        it('remove(): employee._notify( transaction ) should be equal to result', function(done) {
          employee._notify([
            {
              action: "remove",
              objects: [
                {
                  id: 8
                }
              ]
            }
          ]);
          return employee._fetch_all(function(values) {
            return check(done, function() {
              return expect(values.sort(function(a, b) {
                return a.id > b.id;
              })).to.be.eql([
                {
                  id: 2,
                  name: "Josephin Tan",
                  salary: "$1500",
                  customer_id: "223",
                  order_id: "1223"
                }, {
                  id: 3,
                  name: "Khalifa P Nassik",
                  Salary: "$1500",
                  customer_id: "224",
                  order_id: "1224"
                }, {
                  id: 4,
                  name: "James A. Pentel",
                  salary: "$1750",
                  customer_id: "225",
                  order_id: "1225"
                }, {
                  id: 7,
                  name: "John Morrison",
                  salary: "$3000",
                  customer_id: "228",
                  order_id: "1228"
                }
              ]);
            });
          });
        });
        it('_update(): employee._notify( transaction ) should be equal to result', function(done) {
          employee._notify([
            {
              action: "update",
              objects: [
                [
                  {
                    id: 7,
                    name: "John Morrison",
                    salary: "$3000",
                    customer_id: "228",
                    order_id: "1228"
                  }, {
                    id: 7,
                    name: "John Morrison",
                    salary: "$3500",
                    customer_id: "228",
                    order_id: "1228"
                  }
                ], [
                  {
                    id: 2,
                    name: "Josephin Tan",
                    salary: "$1500",
                    customer_id: "223",
                    order_id: "1223"
                  }, {
                    id: 2,
                    name: "Josephin Tan",
                    salary: "$2750",
                    customer_id: "223",
                    order_id: "1223"
                  }
                ]
              ]
            }
          ]);
          return employee._fetch_all(function(values) {
            return check(done, function() {
              return expect(values.sort(function(a, b) {
                return a.id > b.id;
              })).to.be.eql([
                {
                  id: 2,
                  name: "Josephin Tan",
                  salary: "$2750",
                  customer_id: "223",
                  order_id: "1223"
                }, {
                  id: 3,
                  name: "Khalifa P Nassik",
                  Salary: "$1500",
                  customer_id: "224",
                  order_id: "1224"
                }, {
                  id: 4,
                  name: "James A. Pentel",
                  salary: "$1750",
                  customer_id: "225",
                  order_id: "1225"
                }, {
                  id: 7,
                  name: "John Morrison",
                  salary: "$3500",
                  customer_id: "228",
                  order_id: "1228"
                }
              ]);
            });
          });
        });
        return it('filter(): cities.filter( is_in_morocco ) should be equal to result', function(done) {
          var cities_in_morocco;
          cities_in_morocco = cities.filter(function(city) {
            return city.country === "Morocco";
          }).set();
          cities._notify([
            {
              action: "add",
              objects: [
                {
                  id: 9,
                  name: "Moscow",
                  country: "Russia"
                }, {
                  id: 10,
                  name: "Tanger",
                  country: "Morocco"
                }
              ]
            }, {
              action: "update",
              objects: [
                [
                  {
                    id: 6,
                    name: "Casablanca",
                    country: "Morocco"
                  }, {
                    id: 6,
                    name: "Casa",
                    country: "Morocco"
                  }
                ], [
                  {
                    id: 10,
                    name: "Tanger",
                    country: "Morocco"
                  }, {
                    id: 11,
                    name: "Cairo",
                    country: "Egypt"
                  }
                ], [
                  {
                    id: 3,
                    name: "Paris",
                    country: "France"
                  }, {
                    id: 12,
                    name: "Fes",
                    country: "Morocco"
                  }
                ], [
                  {
                    id: 9,
                    name: "Madrid",
                    country: "Spain"
                  }, {
                    id: 13,
                    name: "LA",
                    country: "USA",
                    state: "California"
                  }
                ]
              ]
            }, {
              action: "remove",
              objects: [
                {
                  id: 13,
                  name: "LA",
                  country: "USA",
                  state: "California"
                }, {
                  id: 12,
                  name: "Fes",
                  country: "Morocco"
                }, {
                  id: 11,
                  name: "Cairo",
                  country: "Egypt"
                }
              ]
            }
          ]);
          return cities_in_morocco._fetch_all(function(values) {
            return check(done, function() {
              return expect(values.sort(function(a, b) {
                return a.id > b.id;
              })).to.be.eql([
                {
                  id: 1,
                  name: "Marrakech",
                  country: "Morocco"
                }, {
                  id: 6,
                  name: "Casa",
                  country: "Morocco"
                }
              ]);
            });
          });
        });
      });
      return describe('order():', function() {
        var books, books_ordered_by_ascending_author, books_ordered_by_descending_author, books_ordered_by_descending_year, books_ordered_by_year, by_ascending_author, by_descending_author, by_descending_year, by_descending_year_delay, organizer;
        books = xs.set([
          {
            id: 1,
            title: "A Tale of Two Cities",
            author: "Charles Dickens",
            year: 1859
          }, {
            id: 2,
            title: "The Lord of the Rings",
            author: "J. R. R. Tolkien",
            year: 1955
          }, {
            id: 3,
            title: "The Da Vinci Code",
            author: "Dan Brown",
            year: 2003
          }, {
            id: 4,
            title: "The Alchemist",
            author: "Paulo Coelho",
            year: 1988
          }, {
            id: 5,
            title: "Angels and Demons",
            author: "Dan Brown",
            year: 2000
          }
        ], {
          name: 'books'
        });
        organizer = xs.set([
          {
            id: "year"
          }
        ], {
          name: 'by_year'
        });
        by_ascending_author = function(a, b) {
          if ((a = a.author) === (b = b.author)) {
            return 0;
          }
          if (a === void 0) {
            return -1;
          }
          if (b === void 0) {
            return 1;
          }
          if (a === null) {
            return -1;
          }
          if (b === null) {
            return 1;
          }
          if (a < b) {
            return -1;
          }
          if (a > b) {
            return 1;
          }
          return 0;
        };
        by_descending_author = function(a, b) {
          return by_ascending_author(b, a);
        };
        books_ordered_by_year = books.order(organizer, {
          name: 'books_ordered_by_year'
        }).ordered().ordered();
        by_descending_year_delay = 100;
        by_descending_year = xs.set([
          {
            id: "year",
            descending: true
          }
        ], {
          name: 'by_descending_year'
        }).trace('By Descending Year Organizer, before delay').delay(by_descending_year_delay).trace('By Descending Year Organizer, after delay');
        books_ordered_by_descending_year = books.order(by_descending_year, {
          name: 'books_ordered_by_descending_year',
          insert_before: true
        }).ordered().ordered().delay(by_descending_year_delay);
        books_ordered_by_ascending_author = books.order(by_ascending_author, {
          name: 'books_ordered_by_ascending_author'
        }).ordered().ordered();
        books_ordered_by_descending_author = books.order(by_descending_author, {
          name: 'books_ordered_by_descending_author',
          insert_before: true
        }).ordered().ordered();
        it('books_ordered_by_year should be ordered by ascending year', function(done) {
          return books_ordered_by_year._fetch_all(function(books) {
            return check(done, function() {
              return expect(books).to.be.eql([
                {
                  id: 1,
                  title: "A Tale of Two Cities",
                  author: "Charles Dickens",
                  year: 1859
                }, {
                  id: 2,
                  title: "The Lord of the Rings",
                  author: "J. R. R. Tolkien",
                  year: 1955
                }, {
                  id: 4,
                  title: "The Alchemist",
                  author: "Paulo Coelho",
                  year: 1988
                }, {
                  id: 5,
                  title: "Angels and Demons",
                  author: "Dan Brown",
                  year: 2000
                }, {
                  id: 3,
                  title: "The Da Vinci Code",
                  author: "Dan Brown",
                  year: 2003
                }
              ]);
            });
          });
        });
        it('books_ordered_by_descending_year should be ordered by descending year', function(done) {
          return books_ordered_by_descending_year._fetch_all(function(books) {
            log('books_ordered_by_descending_year delayed fetched');
            return check(done, function() {
              return expect(books).to.be.eql([
                {
                  id: 3,
                  title: "The Da Vinci Code",
                  author: "Dan Brown",
                  year: 2003
                }, {
                  id: 5,
                  title: "Angels and Demons",
                  author: "Dan Brown",
                  year: 2000
                }, {
                  id: 4,
                  title: "The Alchemist",
                  author: "Paulo Coelho",
                  year: 1988
                }, {
                  id: 2,
                  title: "The Lord of the Rings",
                  author: "J. R. R. Tolkien",
                  year: 1955
                }, {
                  id: 1,
                  title: "A Tale of Two Cities",
                  author: "Charles Dickens",
                  year: 1859
                }
              ]);
            });
          });
        });
        it('books_ordered_by_ascending_author should be ordered by ascending auhtor: organizer is a function', function(done) {
          return books_ordered_by_ascending_author._fetch_all(function(books) {
            return check(done, function() {
              return expect(books).to.be.eql([
                {
                  id: 1,
                  title: "A Tale of Two Cities",
                  author: "Charles Dickens",
                  year: 1859
                }, {
                  id: 3,
                  title: "The Da Vinci Code",
                  author: "Dan Brown",
                  year: 2003
                }, {
                  id: 5,
                  title: "Angels and Demons",
                  author: "Dan Brown",
                  year: 2000
                }, {
                  id: 2,
                  title: "The Lord of the Rings",
                  author: "J. R. R. Tolkien",
                  year: 1955
                }, {
                  id: 4,
                  title: "The Alchemist",
                  author: "Paulo Coelho",
                  year: 1988
                }
              ]);
            });
          });
        });
        it('books_ordered_by_descending_author should be ordered by descending auhtor: organizer is a function', function(done) {
          return books_ordered_by_descending_author._fetch_all(function(books) {
            return check(done, function() {
              return expect(books).to.be.eql([
                {
                  id: 4,
                  title: "The Alchemist",
                  author: "Paulo Coelho",
                  year: 1988
                }, {
                  id: 2,
                  title: "The Lord of the Rings",
                  author: "J. R. R. Tolkien",
                  year: 1955
                }, {
                  id: 3,
                  title: "The Da Vinci Code",
                  author: "Dan Brown",
                  year: 2003
                }, {
                  id: 5,
                  title: "Angels and Demons",
                  author: "Dan Brown",
                  year: 2000
                }, {
                  id: 1,
                  title: "A Tale of Two Cities",
                  author: "Charles Dickens",
                  year: 1859
                }
              ]);
            });
          });
        });
        describe('add()', function() {
          it('after books._add( book 6 ), books_ordered_by_year should be ordered by ascending year', function(done) {
            books._add([
              {
                id: 6,
                title: "The Girl with the Dragon Tattoo",
                author: "Stieg Larsson",
                year: 2005
              }
            ]);
            return books_ordered_by_year._fetch_all(function(books) {
              return check(done, function() {
                return expect(books).to.be.eql([
                  {
                    id: 1,
                    title: "A Tale of Two Cities",
                    author: "Charles Dickens",
                    year: 1859
                  }, {
                    id: 2,
                    title: "The Lord of the Rings",
                    author: "J. R. R. Tolkien",
                    year: 1955
                  }, {
                    id: 4,
                    title: "The Alchemist",
                    author: "Paulo Coelho",
                    year: 1988
                  }, {
                    id: 5,
                    title: "Angels and Demons",
                    author: "Dan Brown",
                    year: 2000
                  }, {
                    id: 3,
                    title: "The Da Vinci Code",
                    author: "Dan Brown",
                    year: 2003
                  }, {
                    id: 6,
                    title: "The Girl with the Dragon Tattoo",
                    author: "Stieg Larsson",
                    year: 2005
                  }
                ]);
              });
            });
          });
          it('after books._add( book 6 ), books_ordered_by_descending_year should be ordered by descending year', function(done) {
            return books_ordered_by_descending_year._fetch_all(function(books) {
              return check(done, function() {
                return expect(books).to.be.eql([
                  {
                    id: 6,
                    title: "The Girl with the Dragon Tattoo",
                    author: "Stieg Larsson",
                    year: 2005
                  }, {
                    id: 3,
                    title: "The Da Vinci Code",
                    author: "Dan Brown",
                    year: 2003
                  }, {
                    id: 5,
                    title: "Angels and Demons",
                    author: "Dan Brown",
                    year: 2000
                  }, {
                    id: 4,
                    title: "The Alchemist",
                    author: "Paulo Coelho",
                    year: 1988
                  }, {
                    id: 2,
                    title: "The Lord of the Rings",
                    author: "J. R. R. Tolkien",
                    year: 1955
                  }, {
                    id: 1,
                    title: "A Tale of Two Cities",
                    author: "Charles Dickens",
                    year: 1859
                  }
                ]);
              });
            });
          });
          it('after books._add( book 6 ), books_ordered_by_ascending_author should be ordered by ascending auhtor', function(done) {
            return books_ordered_by_ascending_author._fetch_all(function(books) {
              return check(done, function() {
                return expect(books).to.be.eql([
                  {
                    id: 1,
                    title: "A Tale of Two Cities",
                    author: "Charles Dickens",
                    year: 1859
                  }, {
                    id: 3,
                    title: "The Da Vinci Code",
                    author: "Dan Brown",
                    year: 2003
                  }, {
                    id: 5,
                    title: "Angels and Demons",
                    author: "Dan Brown",
                    year: 2000
                  }, {
                    id: 2,
                    title: "The Lord of the Rings",
                    author: "J. R. R. Tolkien",
                    year: 1955
                  }, {
                    id: 4,
                    title: "The Alchemist",
                    author: "Paulo Coelho",
                    year: 1988
                  }, {
                    id: 6,
                    title: "The Girl with the Dragon Tattoo",
                    author: "Stieg Larsson",
                    year: 2005
                  }
                ]);
              });
            });
          });
          it('after books._add( book 6 ), books_ordered_by_descending_author should be ordered by descending auhtor', function(done) {
            return books_ordered_by_descending_author._fetch_all(function(books) {
              return check(done, function() {
                return expect(books).to.be.eql([
                  {
                    id: 6,
                    title: "The Girl with the Dragon Tattoo",
                    author: "Stieg Larsson",
                    year: 2005
                  }, {
                    id: 4,
                    title: "The Alchemist",
                    author: "Paulo Coelho",
                    year: 1988
                  }, {
                    id: 2,
                    title: "The Lord of the Rings",
                    author: "J. R. R. Tolkien",
                    year: 1955
                  }, {
                    id: 3,
                    title: "The Da Vinci Code",
                    author: "Dan Brown",
                    year: 2003
                  }, {
                    id: 5,
                    title: "Angels and Demons",
                    author: "Dan Brown",
                    year: 2000
                  }, {
                    id: 1,
                    title: "A Tale of Two Cities",
                    author: "Charles Dickens",
                    year: 1859
                  }
                ]);
              });
            });
          });
          it('after books._add( books 7, 8, 9, 10 ), books_ordered_by_year should be ordered by ascending year', function(done) {
            books._add([
              {
                id: 7,
                title: "The McGuffey Readers",
                author: "William Holmes McGuffey",
                year: 1853
              }, {
                id: 8,
                title: "The Hobbit",
                author: "J. R. R. Tolkien",
                year: 1937
              }, {
                id: 9,
                title: "The Hunger Games",
                author: "Suzanne Collins",
                year: 2008
              }, {
                id: 10,
                title: "Harry Potter and the Prisoner of Azkaban",
                author: "J.K. Rowling",
                year: 1999
              }
            ]);
            return books_ordered_by_year._fetch_all(function(books) {
              return check(done, function() {
                return expect(books).to.be.eql([
                  {
                    id: 7,
                    title: "The McGuffey Readers",
                    author: "William Holmes McGuffey",
                    year: 1853
                  }, {
                    id: 1,
                    title: "A Tale of Two Cities",
                    author: "Charles Dickens",
                    year: 1859
                  }, {
                    id: 8,
                    title: "The Hobbit",
                    author: "J. R. R. Tolkien",
                    year: 1937
                  }, {
                    id: 2,
                    title: "The Lord of the Rings",
                    author: "J. R. R. Tolkien",
                    year: 1955
                  }, {
                    id: 4,
                    title: "The Alchemist",
                    author: "Paulo Coelho",
                    year: 1988
                  }, {
                    id: 10,
                    title: "Harry Potter and the Prisoner of Azkaban",
                    author: "J.K. Rowling",
                    year: 1999
                  }, {
                    id: 5,
                    title: "Angels and Demons",
                    author: "Dan Brown",
                    year: 2000
                  }, {
                    id: 3,
                    title: "The Da Vinci Code",
                    author: "Dan Brown",
                    year: 2003
                  }, {
                    id: 6,
                    title: "The Girl with the Dragon Tattoo",
                    author: "Stieg Larsson",
                    year: 2005
                  }, {
                    id: 9,
                    title: "The Hunger Games",
                    author: "Suzanne Collins",
                    year: 2008
                  }
                ]);
              });
            });
          });
          it('after books._add( books 7, 8, 9, 10 ), books_ordered_by_descending_year should be ordered by descending year', function(done) {
            return books_ordered_by_descending_year._fetch_all(function(books) {
              return check(done, function() {
                return expect(books).to.be.eql([
                  {
                    id: 9,
                    title: "The Hunger Games",
                    author: "Suzanne Collins",
                    year: 2008
                  }, {
                    id: 6,
                    title: "The Girl with the Dragon Tattoo",
                    author: "Stieg Larsson",
                    year: 2005
                  }, {
                    id: 3,
                    title: "The Da Vinci Code",
                    author: "Dan Brown",
                    year: 2003
                  }, {
                    id: 5,
                    title: "Angels and Demons",
                    author: "Dan Brown",
                    year: 2000
                  }, {
                    id: 10,
                    title: "Harry Potter and the Prisoner of Azkaban",
                    author: "J.K. Rowling",
                    year: 1999
                  }, {
                    id: 4,
                    title: "The Alchemist",
                    author: "Paulo Coelho",
                    year: 1988
                  }, {
                    id: 2,
                    title: "The Lord of the Rings",
                    author: "J. R. R. Tolkien",
                    year: 1955
                  }, {
                    id: 8,
                    title: "The Hobbit",
                    author: "J. R. R. Tolkien",
                    year: 1937
                  }, {
                    id: 1,
                    title: "A Tale of Two Cities",
                    author: "Charles Dickens",
                    year: 1859
                  }, {
                    id: 7,
                    title: "The McGuffey Readers",
                    author: "William Holmes McGuffey",
                    year: 1853
                  }
                ]);
              });
            });
          });
          it('after books._add( books 7, 8, 9, 10 ), books_ordered_by_ascending_author should be ordered by ascending auhtor', function(done) {
            return books_ordered_by_ascending_author._fetch_all(function(books) {
              return check(done, function() {
                return expect(books).to.be.eql([
                  {
                    id: 1,
                    title: "A Tale of Two Cities",
                    author: "Charles Dickens",
                    year: 1859
                  }, {
                    id: 3,
                    title: "The Da Vinci Code",
                    author: "Dan Brown",
                    year: 2003
                  }, {
                    id: 5,
                    title: "Angels and Demons",
                    author: "Dan Brown",
                    year: 2000
                  }, {
                    id: 2,
                    title: "The Lord of the Rings",
                    author: "J. R. R. Tolkien",
                    year: 1955
                  }, {
                    id: 8,
                    title: "The Hobbit",
                    author: "J. R. R. Tolkien",
                    year: 1937
                  }, {
                    id: 10,
                    title: "Harry Potter and the Prisoner of Azkaban",
                    author: "J.K. Rowling",
                    year: 1999
                  }, {
                    id: 4,
                    title: "The Alchemist",
                    author: "Paulo Coelho",
                    year: 1988
                  }, {
                    id: 6,
                    title: "The Girl with the Dragon Tattoo",
                    author: "Stieg Larsson",
                    year: 2005
                  }, {
                    id: 9,
                    title: "The Hunger Games",
                    author: "Suzanne Collins",
                    year: 2008
                  }, {
                    id: 7,
                    title: "The McGuffey Readers",
                    author: "William Holmes McGuffey",
                    year: 1853
                  }
                ]);
              });
            });
          });
          it('after books._add( books 11, 12, 13 ), whose years are already used; books_ordered_by_year should be ordered by ascending year', function(done) {
            books._add([
              {
                id: 11,
                title: "The Dukan Diet",
                author: "Pierre Dukan",
                year: 2000
              }, {
                id: 12,
                title: "Breaking Dawn",
                author: "Stephenie Meyer",
                year: 2008
              }, {
                id: 13,
                title: "Lolita",
                author: "Vladimir Nabokov",
                year: 1955
              }
            ]);
            return books_ordered_by_year._fetch_all(function(books) {
              return check(done, function() {
                return expect(books).to.be.eql([
                  {
                    id: 7,
                    title: "The McGuffey Readers",
                    author: "William Holmes McGuffey",
                    year: 1853
                  }, {
                    id: 1,
                    title: "A Tale of Two Cities",
                    author: "Charles Dickens",
                    year: 1859
                  }, {
                    id: 8,
                    title: "The Hobbit",
                    author: "J. R. R. Tolkien",
                    year: 1937
                  }, {
                    id: 2,
                    title: "The Lord of the Rings",
                    author: "J. R. R. Tolkien",
                    year: 1955
                  }, {
                    id: 13,
                    title: "Lolita",
                    author: "Vladimir Nabokov",
                    year: 1955
                  }, {
                    id: 4,
                    title: "The Alchemist",
                    author: "Paulo Coelho",
                    year: 1988
                  }, {
                    id: 10,
                    title: "Harry Potter and the Prisoner of Azkaban",
                    author: "J.K. Rowling",
                    year: 1999
                  }, {
                    id: 5,
                    title: "Angels and Demons",
                    author: "Dan Brown",
                    year: 2000
                  }, {
                    id: 11,
                    title: "The Dukan Diet",
                    author: "Pierre Dukan",
                    year: 2000
                  }, {
                    id: 3,
                    title: "The Da Vinci Code",
                    author: "Dan Brown",
                    year: 2003
                  }, {
                    id: 6,
                    title: "The Girl with the Dragon Tattoo",
                    author: "Stieg Larsson",
                    year: 2005
                  }, {
                    id: 9,
                    title: "The Hunger Games",
                    author: "Suzanne Collins",
                    year: 2008
                  }, {
                    id: 12,
                    title: "Breaking Dawn",
                    author: "Stephenie Meyer",
                    year: 2008
                  }
                ]);
              });
            });
          });
          it('after books._add( books 11, 12, 13 ), whose years are already used; books_ordered_by_descending_year should be ordered by descending year', function(done) {
            return books_ordered_by_descending_year._fetch_all(function(books) {
              return check(done, function() {
                return expect(books).to.be.eql([
                  {
                    id: 12,
                    title: "Breaking Dawn",
                    author: "Stephenie Meyer",
                    year: 2008
                  }, {
                    id: 9,
                    title: "The Hunger Games",
                    author: "Suzanne Collins",
                    year: 2008
                  }, {
                    id: 6,
                    title: "The Girl with the Dragon Tattoo",
                    author: "Stieg Larsson",
                    year: 2005
                  }, {
                    id: 3,
                    title: "The Da Vinci Code",
                    author: "Dan Brown",
                    year: 2003
                  }, {
                    id: 11,
                    title: "The Dukan Diet",
                    author: "Pierre Dukan",
                    year: 2000
                  }, {
                    id: 5,
                    title: "Angels and Demons",
                    author: "Dan Brown",
                    year: 2000
                  }, {
                    id: 10,
                    title: "Harry Potter and the Prisoner of Azkaban",
                    author: "J.K. Rowling",
                    year: 1999
                  }, {
                    id: 4,
                    title: "The Alchemist",
                    author: "Paulo Coelho",
                    year: 1988
                  }, {
                    id: 13,
                    title: "Lolita",
                    author: "Vladimir Nabokov",
                    year: 1955
                  }, {
                    id: 2,
                    title: "The Lord of the Rings",
                    author: "J. R. R. Tolkien",
                    year: 1955
                  }, {
                    id: 8,
                    title: "The Hobbit",
                    author: "J. R. R. Tolkien",
                    year: 1937
                  }, {
                    id: 1,
                    title: "A Tale of Two Cities",
                    author: "Charles Dickens",
                    year: 1859
                  }, {
                    id: 7,
                    title: "The McGuffey Readers",
                    author: "William Holmes McGuffey",
                    year: 1853
                  }
                ]);
              });
            });
          });
          it('after books._add( books 14, 15, 16 ), the years are undefined or null; books_ordered_by_year should be ordered by ascending year', function(done) {
            books._add([
              {
                id: 14,
                title: "And Then There Were None",
                author: "Agatha Christie",
                year: void 0
              }, {
                id: 15,
                title: "Steps to Christ",
                author: "Ellen G. White",
                year: null
              }, {
                id: 16,
                title: "Charlie and the Chocolate Factory",
                author: "Roald Dahl"
              }
            ]);
            return books_ordered_by_year._fetch_all(function(books) {
              return check(done, function() {
                return expect(books).to.be.eql([
                  {
                    id: 14,
                    title: "And Then There Were None",
                    author: "Agatha Christie",
                    year: void 0
                  }, {
                    id: 16,
                    title: "Charlie and the Chocolate Factory",
                    author: "Roald Dahl"
                  }, {
                    id: 15,
                    title: "Steps to Christ",
                    author: "Ellen G. White",
                    year: null
                  }, {
                    id: 7,
                    title: "The McGuffey Readers",
                    author: "William Holmes McGuffey",
                    year: 1853
                  }, {
                    id: 1,
                    title: "A Tale of Two Cities",
                    author: "Charles Dickens",
                    year: 1859
                  }, {
                    id: 8,
                    title: "The Hobbit",
                    author: "J. R. R. Tolkien",
                    year: 1937
                  }, {
                    id: 2,
                    title: "The Lord of the Rings",
                    author: "J. R. R. Tolkien",
                    year: 1955
                  }, {
                    id: 13,
                    title: "Lolita",
                    author: "Vladimir Nabokov",
                    year: 1955
                  }, {
                    id: 4,
                    title: "The Alchemist",
                    author: "Paulo Coelho",
                    year: 1988
                  }, {
                    id: 10,
                    title: "Harry Potter and the Prisoner of Azkaban",
                    author: "J.K. Rowling",
                    year: 1999
                  }, {
                    id: 5,
                    title: "Angels and Demons",
                    author: "Dan Brown",
                    year: 2000
                  }, {
                    id: 11,
                    title: "The Dukan Diet",
                    author: "Pierre Dukan",
                    year: 2000
                  }, {
                    id: 3,
                    title: "The Da Vinci Code",
                    author: "Dan Brown",
                    year: 2003
                  }, {
                    id: 6,
                    title: "The Girl with the Dragon Tattoo",
                    author: "Stieg Larsson",
                    year: 2005
                  }, {
                    id: 9,
                    title: "The Hunger Games",
                    author: "Suzanne Collins",
                    year: 2008
                  }, {
                    id: 12,
                    title: "Breaking Dawn",
                    author: "Stephenie Meyer",
                    year: 2008
                  }
                ]);
              });
            });
          });
          it('after books._add( books 14, 15, 16 ), the years are undefined or null; books_ordered_by_descending_year should be ordered by descending year', function(done) {
            return books_ordered_by_descending_year._fetch_all(function(books) {
              return check(done, function() {
                return expect(books).to.be.eql([
                  {
                    id: 12,
                    title: "Breaking Dawn",
                    author: "Stephenie Meyer",
                    year: 2008
                  }, {
                    id: 9,
                    title: "The Hunger Games",
                    author: "Suzanne Collins",
                    year: 2008
                  }, {
                    id: 6,
                    title: "The Girl with the Dragon Tattoo",
                    author: "Stieg Larsson",
                    year: 2005
                  }, {
                    id: 3,
                    title: "The Da Vinci Code",
                    author: "Dan Brown",
                    year: 2003
                  }, {
                    id: 11,
                    title: "The Dukan Diet",
                    author: "Pierre Dukan",
                    year: 2000
                  }, {
                    id: 5,
                    title: "Angels and Demons",
                    author: "Dan Brown",
                    year: 2000
                  }, {
                    id: 10,
                    title: "Harry Potter and the Prisoner of Azkaban",
                    author: "J.K. Rowling",
                    year: 1999
                  }, {
                    id: 4,
                    title: "The Alchemist",
                    author: "Paulo Coelho",
                    year: 1988
                  }, {
                    id: 13,
                    title: "Lolita",
                    author: "Vladimir Nabokov",
                    year: 1955
                  }, {
                    id: 2,
                    title: "The Lord of the Rings",
                    author: "J. R. R. Tolkien",
                    year: 1955
                  }, {
                    id: 8,
                    title: "The Hobbit",
                    author: "J. R. R. Tolkien",
                    year: 1937
                  }, {
                    id: 1,
                    title: "A Tale of Two Cities",
                    author: "Charles Dickens",
                    year: 1859
                  }, {
                    id: 7,
                    title: "The McGuffey Readers",
                    author: "William Holmes McGuffey",
                    year: 1853
                  }, {
                    id: 15,
                    title: "Steps to Christ",
                    author: "Ellen G. White",
                    year: null
                  }, {
                    id: 14,
                    title: "And Then There Were None",
                    author: "Agatha Christie",
                    year: void 0
                  }, {
                    id: 16,
                    title: "Charlie and the Chocolate Factory",
                    author: "Roald Dahl"
                  }
                ]);
              });
            });
          });
          it('_update organizer, books_ordered_by_year should be ordered by ascending by title', function(done) {
            organizer._update([
              [
                {
                  id: "year"
                }, {
                  id: "title"
                }
              ]
            ]);
            return books_ordered_by_year._fetch_all(function(books) {
              return check(done, function() {
                return expect(books).to.be.eql([
                  {
                    id: 1,
                    title: "A Tale of Two Cities",
                    author: "Charles Dickens",
                    year: 1859
                  }, {
                    id: 14,
                    title: "And Then There Were None",
                    author: "Agatha Christie",
                    year: void 0
                  }, {
                    id: 5,
                    title: "Angels and Demons",
                    author: "Dan Brown",
                    year: 2000
                  }, {
                    id: 12,
                    title: "Breaking Dawn",
                    author: "Stephenie Meyer",
                    year: 2008
                  }, {
                    id: 16,
                    title: "Charlie and the Chocolate Factory",
                    author: "Roald Dahl"
                  }, {
                    id: 10,
                    title: "Harry Potter and the Prisoner of Azkaban",
                    author: "J.K. Rowling",
                    year: 1999
                  }, {
                    id: 13,
                    title: "Lolita",
                    author: "Vladimir Nabokov",
                    year: 1955
                  }, {
                    id: 15,
                    title: "Steps to Christ",
                    author: "Ellen G. White",
                    year: null
                  }, {
                    id: 4,
                    title: "The Alchemist",
                    author: "Paulo Coelho",
                    year: 1988
                  }, {
                    id: 3,
                    title: "The Da Vinci Code",
                    author: "Dan Brown",
                    year: 2003
                  }, {
                    id: 11,
                    title: "The Dukan Diet",
                    author: "Pierre Dukan",
                    year: 2000
                  }, {
                    id: 6,
                    title: "The Girl with the Dragon Tattoo",
                    author: "Stieg Larsson",
                    year: 2005
                  }, {
                    id: 8,
                    title: "The Hobbit",
                    author: "J. R. R. Tolkien",
                    year: 1937
                  }, {
                    id: 9,
                    title: "The Hunger Games",
                    author: "Suzanne Collins",
                    year: 2008
                  }, {
                    id: 2,
                    title: "The Lord of the Rings",
                    author: "J. R. R. Tolkien",
                    year: 1955
                  }, {
                    id: 7,
                    title: "The McGuffey Readers",
                    author: "William Holmes McGuffey",
                    year: 1853
                  }
                ]);
              });
            });
          });
          it('add a second field to organizer, books_ordered_by_year should be ordered by ascending year and title', function(done) {
            organizer._notify([
              {
                action: "update",
                objects: [
                  [
                    {
                      id: "title"
                    }, {
                      id: "year"
                    }
                  ]
                ]
              }, {
                action: "add",
                objects: [
                  {
                    id: "title"
                  }
                ]
              }
            ]);
            return books_ordered_by_year._fetch_all(function(books) {
              return check(done, function() {
                return expect(books).to.be.eql([
                  {
                    id: 14,
                    title: "And Then There Were None",
                    author: "Agatha Christie",
                    year: void 0
                  }, {
                    id: 16,
                    title: "Charlie and the Chocolate Factory",
                    author: "Roald Dahl"
                  }, {
                    id: 15,
                    title: "Steps to Christ",
                    author: "Ellen G. White",
                    year: null
                  }, {
                    id: 7,
                    title: "The McGuffey Readers",
                    author: "William Holmes McGuffey",
                    year: 1853
                  }, {
                    id: 1,
                    title: "A Tale of Two Cities",
                    author: "Charles Dickens",
                    year: 1859
                  }, {
                    id: 8,
                    title: "The Hobbit",
                    author: "J. R. R. Tolkien",
                    year: 1937
                  }, {
                    id: 13,
                    title: "Lolita",
                    author: "Vladimir Nabokov",
                    year: 1955
                  }, {
                    id: 2,
                    title: "The Lord of the Rings",
                    author: "J. R. R. Tolkien",
                    year: 1955
                  }, {
                    id: 4,
                    title: "The Alchemist",
                    author: "Paulo Coelho",
                    year: 1988
                  }, {
                    id: 10,
                    title: "Harry Potter and the Prisoner of Azkaban",
                    author: "J.K. Rowling",
                    year: 1999
                  }, {
                    id: 5,
                    title: "Angels and Demons",
                    author: "Dan Brown",
                    year: 2000
                  }, {
                    id: 11,
                    title: "The Dukan Diet",
                    author: "Pierre Dukan",
                    year: 2000
                  }, {
                    id: 3,
                    title: "The Da Vinci Code",
                    author: "Dan Brown",
                    year: 2003
                  }, {
                    id: 6,
                    title: "The Girl with the Dragon Tattoo",
                    author: "Stieg Larsson",
                    year: 2005
                  }, {
                    id: 12,
                    title: "Breaking Dawn",
                    author: "Stephenie Meyer",
                    year: 2008
                  }, {
                    id: 9,
                    title: "The Hunger Games",
                    author: "Suzanne Collins",
                    year: 2008
                  }
                ]);
              });
            });
          });
          it('books_ordered_by_ascending_author should be ordered by ascending auhtor', function(done) {
            return books_ordered_by_ascending_author._fetch_all(function(books) {
              return check(done, function() {
                return expect(books).to.be.eql([
                  {
                    id: 14,
                    title: "And Then There Were None",
                    author: "Agatha Christie",
                    year: void 0
                  }, {
                    id: 1,
                    title: "A Tale of Two Cities",
                    author: "Charles Dickens",
                    year: 1859
                  }, {
                    id: 3,
                    title: "The Da Vinci Code",
                    author: "Dan Brown",
                    year: 2003
                  }, {
                    id: 5,
                    title: "Angels and Demons",
                    author: "Dan Brown",
                    year: 2000
                  }, {
                    id: 15,
                    title: "Steps to Christ",
                    author: "Ellen G. White",
                    year: null
                  }, {
                    id: 2,
                    title: "The Lord of the Rings",
                    author: "J. R. R. Tolkien",
                    year: 1955
                  }, {
                    id: 8,
                    title: "The Hobbit",
                    author: "J. R. R. Tolkien",
                    year: 1937
                  }, {
                    id: 10,
                    title: "Harry Potter and the Prisoner of Azkaban",
                    author: "J.K. Rowling",
                    year: 1999
                  }, {
                    id: 4,
                    title: "The Alchemist",
                    author: "Paulo Coelho",
                    year: 1988
                  }, {
                    id: 11,
                    title: "The Dukan Diet",
                    author: "Pierre Dukan",
                    year: 2000
                  }, {
                    id: 16,
                    title: "Charlie and the Chocolate Factory",
                    author: "Roald Dahl"
                  }, {
                    id: 12,
                    title: "Breaking Dawn",
                    author: "Stephenie Meyer",
                    year: 2008
                  }, {
                    id: 6,
                    title: "The Girl with the Dragon Tattoo",
                    author: "Stieg Larsson",
                    year: 2005
                  }, {
                    id: 9,
                    title: "The Hunger Games",
                    author: "Suzanne Collins",
                    year: 2008
                  }, {
                    id: 13,
                    title: "Lolita",
                    author: "Vladimir Nabokov",
                    year: 1955
                  }, {
                    id: 7,
                    title: "The McGuffey Readers",
                    author: "William Holmes McGuffey",
                    year: 1853
                  }
                ]);
              });
            });
          });
          it('books_ordered_by_descending_author should be ordered by descending auhtor', function(done) {
            return books_ordered_by_descending_author._fetch_all(function(books) {
              return check(done, function() {
                return expect(books).to.be.eql([
                  {
                    id: 7,
                    title: "The McGuffey Readers",
                    author: "William Holmes McGuffey",
                    year: 1853
                  }, {
                    id: 13,
                    title: "Lolita",
                    author: "Vladimir Nabokov",
                    year: 1955
                  }, {
                    id: 9,
                    title: "The Hunger Games",
                    author: "Suzanne Collins",
                    year: 2008
                  }, {
                    id: 6,
                    title: "The Girl with the Dragon Tattoo",
                    author: "Stieg Larsson",
                    year: 2005
                  }, {
                    id: 12,
                    title: "Breaking Dawn",
                    author: "Stephenie Meyer",
                    year: 2008
                  }, {
                    id: 16,
                    title: "Charlie and the Chocolate Factory",
                    author: "Roald Dahl"
                  }, {
                    id: 11,
                    title: "The Dukan Diet",
                    author: "Pierre Dukan",
                    year: 2000
                  }, {
                    id: 4,
                    title: "The Alchemist",
                    author: "Paulo Coelho",
                    year: 1988
                  }, {
                    id: 10,
                    title: "Harry Potter and the Prisoner of Azkaban",
                    author: "J.K. Rowling",
                    year: 1999
                  }, {
                    id: 8,
                    title: "The Hobbit",
                    author: "J. R. R. Tolkien",
                    year: 1937
                  }, {
                    id: 2,
                    title: "The Lord of the Rings",
                    author: "J. R. R. Tolkien",
                    year: 1955
                  }, {
                    id: 15,
                    title: "Steps to Christ",
                    author: "Ellen G. White",
                    year: null
                  }, {
                    id: 3,
                    title: "The Da Vinci Code",
                    author: "Dan Brown",
                    year: 2003
                  }, {
                    id: 5,
                    title: "Angels and Demons",
                    author: "Dan Brown",
                    year: 2000
                  }, {
                    id: 1,
                    title: "A Tale of Two Cities",
                    author: "Charles Dickens",
                    year: 1859
                  }, {
                    id: 14,
                    title: "And Then There Were None",
                    author: "Agatha Christie",
                    year: void 0
                  }
                ]);
              });
            });
          });
          it('books_ordered_by_ascending_id should be ordered by ascending id: organizer is an objects', function(done) {
            var books_ordered_by_ascending_id;
            books_ordered_by_ascending_id = books.order([
              {
                id: "id"
              }
            ]).ordered().ordered();
            return books_ordered_by_ascending_id._fetch_all(function(books) {
              return check(done, function() {
                return expect(books).to.be.eql([
                  {
                    id: 1,
                    title: "A Tale of Two Cities",
                    author: "Charles Dickens",
                    year: 1859
                  }, {
                    id: 2,
                    title: "The Lord of the Rings",
                    author: "J. R. R. Tolkien",
                    year: 1955
                  }, {
                    id: 3,
                    title: "The Da Vinci Code",
                    author: "Dan Brown",
                    year: 2003
                  }, {
                    id: 4,
                    title: "The Alchemist",
                    author: "Paulo Coelho",
                    year: 1988
                  }, {
                    id: 5,
                    title: "Angels and Demons",
                    author: "Dan Brown",
                    year: 2000
                  }, {
                    id: 6,
                    title: "The Girl with the Dragon Tattoo",
                    author: "Stieg Larsson",
                    year: 2005
                  }, {
                    id: 7,
                    title: "The McGuffey Readers",
                    author: "William Holmes McGuffey",
                    year: 1853
                  }, {
                    id: 8,
                    title: "The Hobbit",
                    author: "J. R. R. Tolkien",
                    year: 1937
                  }, {
                    id: 9,
                    title: "The Hunger Games",
                    author: "Suzanne Collins",
                    year: 2008
                  }, {
                    id: 10,
                    title: "Harry Potter and the Prisoner of Azkaban",
                    author: "J.K. Rowling",
                    year: 1999
                  }, {
                    id: 11,
                    title: "The Dukan Diet",
                    author: "Pierre Dukan",
                    year: 2000
                  }, {
                    id: 12,
                    title: "Breaking Dawn",
                    author: "Stephenie Meyer",
                    year: 2008
                  }, {
                    id: 13,
                    title: "Lolita",
                    author: "Vladimir Nabokov",
                    year: 1955
                  }, {
                    id: 14,
                    title: "And Then There Were None",
                    author: "Agatha Christie",
                    year: void 0
                  }, {
                    id: 15,
                    title: "Steps to Christ",
                    author: "Ellen G. White",
                    year: null
                  }, {
                    id: 16,
                    title: "Charlie and the Chocolate Factory",
                    author: "Roald Dahl"
                  }
                ]);
              });
            });
          });
          return it('books_ordered_by_descending should be ordered by descending id: organizer is an objects', function(done) {
            var books_ordered_by_ascending_id;
            books_ordered_by_ascending_id = books.order([
              {
                id: "id",
                descending: true
              }
            ]).ordered().ordered();
            return books_ordered_by_ascending_id._fetch_all(function(books) {
              return check(done, function() {
                return expect(books).to.be.eql([
                  {
                    id: 16,
                    title: "Charlie and the Chocolate Factory",
                    author: "Roald Dahl"
                  }, {
                    id: 15,
                    title: "Steps to Christ",
                    author: "Ellen G. White",
                    year: null
                  }, {
                    id: 14,
                    title: "And Then There Were None",
                    author: "Agatha Christie",
                    year: void 0
                  }, {
                    id: 13,
                    title: "Lolita",
                    author: "Vladimir Nabokov",
                    year: 1955
                  }, {
                    id: 12,
                    title: "Breaking Dawn",
                    author: "Stephenie Meyer",
                    year: 2008
                  }, {
                    id: 11,
                    title: "The Dukan Diet",
                    author: "Pierre Dukan",
                    year: 2000
                  }, {
                    id: 10,
                    title: "Harry Potter and the Prisoner of Azkaban",
                    author: "J.K. Rowling",
                    year: 1999
                  }, {
                    id: 9,
                    title: "The Hunger Games",
                    author: "Suzanne Collins",
                    year: 2008
                  }, {
                    id: 8,
                    title: "The Hobbit",
                    author: "J. R. R. Tolkien",
                    year: 1937
                  }, {
                    id: 7,
                    title: "The McGuffey Readers",
                    author: "William Holmes McGuffey",
                    year: 1853
                  }, {
                    id: 6,
                    title: "The Girl with the Dragon Tattoo",
                    author: "Stieg Larsson",
                    year: 2005
                  }, {
                    id: 5,
                    title: "Angels and Demons",
                    author: "Dan Brown",
                    year: 2000
                  }, {
                    id: 4,
                    title: "The Alchemist",
                    author: "Paulo Coelho",
                    year: 1988
                  }, {
                    id: 3,
                    title: "The Da Vinci Code",
                    author: "Dan Brown",
                    year: 2003
                  }, {
                    id: 2,
                    title: "The Lord of the Rings",
                    author: "J. R. R. Tolkien",
                    year: 1955
                  }, {
                    id: 1,
                    title: "A Tale of Two Cities",
                    author: "Charles Dickens",
                    year: 1859
                  }
                ]);
              });
            });
          });
        });
        describe('_update():', function() {
          it('after books._update( object 2 ), books_ordered_by_year should be ordered by ascending year', function(done) {
            books._update([
              [
                {
                  id: 2,
                  title: "The Lord of the Rings",
                  author: "J. R. R. Tolkien",
                  year: 1955
                }, {
                  id: 2,
                  title: "The Lord of the Rings 1",
                  author: "J. R. R. Tolkien",
                  year: 1954
                }
              ]
            ]);
            return books_ordered_by_year._fetch_all(function(books) {
              return check(done, function() {
                return expect(books).to.be.eql([
                  {
                    id: 14,
                    title: "And Then There Were None",
                    author: "Agatha Christie",
                    year: void 0
                  }, {
                    id: 16,
                    title: "Charlie and the Chocolate Factory",
                    author: "Roald Dahl"
                  }, {
                    id: 15,
                    title: "Steps to Christ",
                    author: "Ellen G. White",
                    year: null
                  }, {
                    id: 7,
                    title: "The McGuffey Readers",
                    author: "William Holmes McGuffey",
                    year: 1853
                  }, {
                    id: 1,
                    title: "A Tale of Two Cities",
                    author: "Charles Dickens",
                    year: 1859
                  }, {
                    id: 8,
                    title: "The Hobbit",
                    author: "J. R. R. Tolkien",
                    year: 1937
                  }, {
                    id: 2,
                    title: "The Lord of the Rings 1",
                    author: "J. R. R. Tolkien",
                    year: 1954
                  }, {
                    id: 13,
                    title: "Lolita",
                    author: "Vladimir Nabokov",
                    year: 1955
                  }, {
                    id: 4,
                    title: "The Alchemist",
                    author: "Paulo Coelho",
                    year: 1988
                  }, {
                    id: 10,
                    title: "Harry Potter and the Prisoner of Azkaban",
                    author: "J.K. Rowling",
                    year: 1999
                  }, {
                    id: 5,
                    title: "Angels and Demons",
                    author: "Dan Brown",
                    year: 2000
                  }, {
                    id: 11,
                    title: "The Dukan Diet",
                    author: "Pierre Dukan",
                    year: 2000
                  }, {
                    id: 3,
                    title: "The Da Vinci Code",
                    author: "Dan Brown",
                    year: 2003
                  }, {
                    id: 6,
                    title: "The Girl with the Dragon Tattoo",
                    author: "Stieg Larsson",
                    year: 2005
                  }, {
                    id: 12,
                    title: "Breaking Dawn",
                    author: "Stephenie Meyer",
                    year: 2008
                  }, {
                    id: 9,
                    title: "The Hunger Games",
                    author: "Suzanne Collins",
                    year: 2008
                  }
                ]);
              });
            });
          });
          it('after books._update( object 2 ), books_ordered_by_descending_year should be ordered by descending year', function(done) {
            return books_ordered_by_descending_year._fetch_all(function(books) {
              return check(done, function() {
                return expect(books).to.be.eql([
                  {
                    id: 12,
                    title: "Breaking Dawn",
                    author: "Stephenie Meyer",
                    year: 2008
                  }, {
                    id: 9,
                    title: "The Hunger Games",
                    author: "Suzanne Collins",
                    year: 2008
                  }, {
                    id: 6,
                    title: "The Girl with the Dragon Tattoo",
                    author: "Stieg Larsson",
                    year: 2005
                  }, {
                    id: 3,
                    title: "The Da Vinci Code",
                    author: "Dan Brown",
                    year: 2003
                  }, {
                    id: 11,
                    title: "The Dukan Diet",
                    author: "Pierre Dukan",
                    year: 2000
                  }, {
                    id: 5,
                    title: "Angels and Demons",
                    author: "Dan Brown",
                    year: 2000
                  }, {
                    id: 10,
                    title: "Harry Potter and the Prisoner of Azkaban",
                    author: "J.K. Rowling",
                    year: 1999
                  }, {
                    id: 4,
                    title: "The Alchemist",
                    author: "Paulo Coelho",
                    year: 1988
                  }, {
                    id: 13,
                    title: "Lolita",
                    author: "Vladimir Nabokov",
                    year: 1955
                  }, {
                    id: 2,
                    title: "The Lord of the Rings 1",
                    author: "J. R. R. Tolkien",
                    year: 1954
                  }, {
                    id: 8,
                    title: "The Hobbit",
                    author: "J. R. R. Tolkien",
                    year: 1937
                  }, {
                    id: 1,
                    title: "A Tale of Two Cities",
                    author: "Charles Dickens",
                    year: 1859
                  }, {
                    id: 7,
                    title: "The McGuffey Readers",
                    author: "William Holmes McGuffey",
                    year: 1853
                  }, {
                    id: 15,
                    title: "Steps to Christ",
                    author: "Ellen G. White",
                    year: null
                  }, {
                    id: 14,
                    title: "And Then There Were None",
                    author: "Agatha Christie",
                    year: void 0
                  }, {
                    id: 16,
                    title: "Charlie and the Chocolate Factory",
                    author: "Roald Dahl"
                  }
                ]);
              });
            });
          });
          it('after books._notify( 4 updates transaction ), books_ordered_by_year should be ordered by ascending year', function(done) {
            books._notify([
              {
                action: "update",
                objects: [
                  [
                    {
                      id: 8,
                      title: "The Hobbit",
                      author: "J. R. R. Tolkien",
                      year: 1937
                    }, {
                      id: 8,
                      title: "The Hobbit Changed",
                      author: "J. R. R. Tolkien 8",
                      year: 1937
                    }
                  ], [
                    {
                      id: 15,
                      title: "Steps to Christ",
                      author: "Ellen G. White",
                      year: null
                    }, {
                      id: 15,
                      title: "Steps to Christ",
                      author: "Ellen G. White",
                      year: void 0
                    }
                  ], [
                    {
                      id: 16,
                      title: "Charlie and the Chocolate Factory",
                      author: "Roald Dahl"
                    }, {
                      id: 16,
                      title: "Charlie and the Chocolate Factory",
                      author: "Roald Dahl",
                      year: 1970
                    }
                  ], [
                    {
                      id: 14,
                      title: "And Then There Were None",
                      author: "Agatha Christie",
                      year: void 0
                    }, {
                      id: 14,
                      title: "And Then There Were None",
                      author: "Agatha Christie",
                      year: 1927
                    }
                  ], [
                    {
                      id: 2,
                      title: "The Lord of the Rings 1",
                      author: "J. R. R. Tolkien",
                      year: 1954
                    }, {
                      id: 2,
                      title: "The Lord of the Rings 1",
                      author: "J. R. R. Tolkien 2",
                      year: 1954
                    }
                  ], [
                    {
                      id: 11,
                      title: "The Dukan Diet",
                      author: "Pierre Dukan",
                      year: 2000
                    }, {
                      id: 11,
                      title: "The Dukan Diet",
                      author: "Pierre Dukan",
                      year: 1999
                    }
                  ], [
                    {
                      id: 5,
                      title: "Angels and Demons",
                      author: "Dan Brown",
                      year: 2000
                    }, {
                      id: 5,
                      title: "Angels and Demons",
                      author: "Dan Brown",
                      year: 2001
                    }
                  ], [
                    {
                      id: 12,
                      title: "Breaking Dawn",
                      author: "Stephenie Meyer",
                      year: 2008
                    }, {
                      id: 12,
                      title: "Breaking Dawn",
                      author: "Stephenie Meyer",
                      year: 1875
                    }
                  ], [
                    {
                      id: 9,
                      title: "The Hunger Games",
                      author: "Suzanne Collins",
                      year: 2008
                    }, {
                      id: 9,
                      title: "The Hunger Games",
                      author: "Suzanne Collins",
                      year: 1942
                    }
                  ]
                ]
              }
            ]);
            return books_ordered_by_year._fetch_all(function(books) {
              return check(done, function() {
                return expect(books).to.be.eql([
                  {
                    id: 15,
                    title: "Steps to Christ",
                    author: "Ellen G. White",
                    year: void 0
                  }, {
                    id: 7,
                    title: "The McGuffey Readers",
                    author: "William Holmes McGuffey",
                    year: 1853
                  }, {
                    id: 1,
                    title: "A Tale of Two Cities",
                    author: "Charles Dickens",
                    year: 1859
                  }, {
                    id: 12,
                    title: "Breaking Dawn",
                    author: "Stephenie Meyer",
                    year: 1875
                  }, {
                    id: 14,
                    title: "And Then There Were None",
                    author: "Agatha Christie",
                    year: 1927
                  }, {
                    id: 8,
                    title: "The Hobbit Changed",
                    author: "J. R. R. Tolkien 8",
                    year: 1937
                  }, {
                    id: 9,
                    title: "The Hunger Games",
                    author: "Suzanne Collins",
                    year: 1942
                  }, {
                    id: 2,
                    title: "The Lord of the Rings 1",
                    author: "J. R. R. Tolkien 2",
                    year: 1954
                  }, {
                    id: 13,
                    title: "Lolita",
                    author: "Vladimir Nabokov",
                    year: 1955
                  }, {
                    id: 16,
                    title: "Charlie and the Chocolate Factory",
                    author: "Roald Dahl",
                    year: 1970
                  }, {
                    id: 4,
                    title: "The Alchemist",
                    author: "Paulo Coelho",
                    year: 1988
                  }, {
                    id: 10,
                    title: "Harry Potter and the Prisoner of Azkaban",
                    author: "J.K. Rowling",
                    year: 1999
                  }, {
                    id: 11,
                    title: "The Dukan Diet",
                    author: "Pierre Dukan",
                    year: 1999
                  }, {
                    id: 5,
                    title: "Angels and Demons",
                    author: "Dan Brown",
                    year: 2001
                  }, {
                    id: 3,
                    title: "The Da Vinci Code",
                    author: "Dan Brown",
                    year: 2003
                  }, {
                    id: 6,
                    title: "The Girl with the Dragon Tattoo",
                    author: "Stieg Larsson",
                    year: 2005
                  }
                ]);
              });
            });
          });
          return it('after books._notify( transaction ), books_ordered_by_descending_year should be ordered by descending year', function(done) {
            return books_ordered_by_descending_year._fetch_all(function(books) {
              return check(done, function() {
                return expect(books).to.be.eql([
                  {
                    id: 6,
                    title: "The Girl with the Dragon Tattoo",
                    author: "Stieg Larsson",
                    year: 2005
                  }, {
                    id: 3,
                    title: "The Da Vinci Code",
                    author: "Dan Brown",
                    year: 2003
                  }, {
                    id: 5,
                    title: "Angels and Demons",
                    author: "Dan Brown",
                    year: 2001
                  }, {
                    id: 11,
                    title: "The Dukan Diet",
                    author: "Pierre Dukan",
                    year: 1999
                  }, {
                    id: 10,
                    title: "Harry Potter and the Prisoner of Azkaban",
                    author: "J.K. Rowling",
                    year: 1999
                  }, {
                    id: 4,
                    title: "The Alchemist",
                    author: "Paulo Coelho",
                    year: 1988
                  }, {
                    id: 16,
                    title: "Charlie and the Chocolate Factory",
                    author: "Roald Dahl",
                    year: 1970
                  }, {
                    id: 13,
                    title: "Lolita",
                    author: "Vladimir Nabokov",
                    year: 1955
                  }, {
                    id: 2,
                    title: "The Lord of the Rings 1",
                    author: "J. R. R. Tolkien 2",
                    year: 1954
                  }, {
                    id: 9,
                    title: "The Hunger Games",
                    author: "Suzanne Collins",
                    year: 1942
                  }, {
                    id: 8,
                    title: "The Hobbit Changed",
                    author: "J. R. R. Tolkien 8",
                    year: 1937
                  }, {
                    id: 14,
                    title: "And Then There Were None",
                    author: "Agatha Christie",
                    year: 1927
                  }, {
                    id: 12,
                    title: "Breaking Dawn",
                    author: "Stephenie Meyer",
                    year: 1875
                  }, {
                    id: 1,
                    title: "A Tale of Two Cities",
                    author: "Charles Dickens",
                    year: 1859
                  }, {
                    id: 7,
                    title: "The McGuffey Readers",
                    author: "William Holmes McGuffey",
                    year: 1853
                  }, {
                    id: 15,
                    title: "Steps to Christ",
                    author: "Ellen G. White",
                    year: void 0
                  }
                ]);
              });
            });
          });
        });
        return describe('remove( books 12, 13, 3, 15 ):', function() {
          it('after books._remove( objects 12, 13, 15 ), books_ordered_by_ascending_author should be ordered by ascending auhtor', function(done) {
            books._remove([
              {
                id: 12,
                title: "Breaking Dawn",
                author: "Stephenie Meyer",
                year: 2008
              }, {
                id: 13,
                title: "Lolita",
                author: "Vladimir Nabokov",
                year: 1955
              }, {
                id: 3,
                title: "The Da Vinci Code",
                author: "Dan Brown",
                year: 2003
              }, {
                id: 15,
                title: "Steps to Christ",
                author: "Ellen G. White",
                year: void 0
              }
            ]);
            return books_ordered_by_ascending_author._fetch_all(function(books) {
              return check(done, function() {
                return expect(books).to.be.eql([
                  {
                    id: 14,
                    title: "And Then There Were None",
                    author: "Agatha Christie",
                    year: 1927
                  }, {
                    id: 1,
                    title: "A Tale of Two Cities",
                    author: "Charles Dickens",
                    year: 1859
                  }, {
                    id: 5,
                    title: "Angels and Demons",
                    author: "Dan Brown",
                    year: 2001
                  }, {
                    id: 2,
                    title: "The Lord of the Rings 1",
                    author: "J. R. R. Tolkien 2",
                    year: 1954
                  }, {
                    id: 8,
                    title: "The Hobbit Changed",
                    author: "J. R. R. Tolkien 8",
                    year: 1937
                  }, {
                    id: 10,
                    title: "Harry Potter and the Prisoner of Azkaban",
                    author: "J.K. Rowling",
                    year: 1999
                  }, {
                    id: 4,
                    title: "The Alchemist",
                    author: "Paulo Coelho",
                    year: 1988
                  }, {
                    id: 11,
                    title: "The Dukan Diet",
                    author: "Pierre Dukan",
                    year: 1999
                  }, {
                    id: 16,
                    title: "Charlie and the Chocolate Factory",
                    author: "Roald Dahl",
                    year: 1970
                  }, {
                    id: 6,
                    title: "The Girl with the Dragon Tattoo",
                    author: "Stieg Larsson",
                    year: 2005
                  }, {
                    id: 9,
                    title: "The Hunger Games",
                    author: "Suzanne Collins",
                    year: 1942
                  }, {
                    id: 7,
                    title: "The McGuffey Readers",
                    author: "William Holmes McGuffey",
                    year: 1853
                  }
                ]);
              });
            });
          });
          return it('after books._remove( objects 12, 13, 3, 15 ), books_ordered_by_descending_author should be ordered by descending auhtor', function(done) {
            return books_ordered_by_descending_author._fetch_all(function(books) {
              return check(done, function() {
                return expect(books).to.be.eql([
                  {
                    id: 7,
                    title: "The McGuffey Readers",
                    author: "William Holmes McGuffey",
                    year: 1853
                  }, {
                    id: 9,
                    title: "The Hunger Games",
                    author: "Suzanne Collins",
                    year: 1942
                  }, {
                    id: 6,
                    title: "The Girl with the Dragon Tattoo",
                    author: "Stieg Larsson",
                    year: 2005
                  }, {
                    id: 16,
                    title: "Charlie and the Chocolate Factory",
                    author: "Roald Dahl",
                    year: 1970
                  }, {
                    id: 11,
                    title: "The Dukan Diet",
                    author: "Pierre Dukan",
                    year: 1999
                  }, {
                    id: 4,
                    title: "The Alchemist",
                    author: "Paulo Coelho",
                    year: 1988
                  }, {
                    id: 10,
                    title: "Harry Potter and the Prisoner of Azkaban",
                    author: "J.K. Rowling",
                    year: 1999
                  }, {
                    id: 8,
                    title: "The Hobbit Changed",
                    author: "J. R. R. Tolkien 8",
                    year: 1937
                  }, {
                    id: 2,
                    title: "The Lord of the Rings 1",
                    author: "J. R. R. Tolkien 2",
                    year: 1954
                  }, {
                    id: 5,
                    title: "Angels and Demons",
                    author: "Dan Brown",
                    year: 2001
                  }, {
                    id: 1,
                    title: "A Tale of Two Cities",
                    author: "Charles Dickens",
                    year: 1859
                  }, {
                    id: 14,
                    title: "And Then There Were None",
                    author: "Agatha Christie",
                    year: 1927
                  }
                ]);
              });
            });
          });
        });
      });
    });
    describe('xs.aggregate() and Pipelet.Compose():', function() {
      var aggregate_from, books_sales, books_sales_by_author, books_sales_by_year, by_author, by_year, sales, tolkien_books, tolkien_sales_by_year;
      books_sales = xs.set([
        {
          id: 1,
          title: "A Tale of Two Cities",
          author: "Charles Dickens",
          sales: 200,
          year: 1859
        }, {
          id: 2,
          title: "The Lord of the Rings",
          author: "J. R. R. Tolkien",
          sales: 150,
          year: 1955
        }, {
          id: 3,
          title: "The Da Vinci Code",
          author: "Dan Brown",
          sales: 80,
          year: 2003
        }, {
          id: 4,
          title: "The Alchemist",
          author: "Paulo Coelho",
          sales: 65,
          year: 1988
        }, {
          id: 5,
          title: "Angels and Demons",
          author: "Dan Brown",
          sales: 39,
          year: 2000
        }, {
          id: 6,
          title: "The Girl with the Dragon Tattoo",
          author: "Stieg Larsson",
          sales: 30,
          year: 2005
        }, {
          id: 7,
          title: "The McGuffey Readers",
          author: "William Holmes McGuffey",
          sales: 125,
          year: 1853
        }, {
          id: 8,
          title: "The Hobbit",
          author: "J. R. R. Tolkien",
          sales: 100,
          year: 1937
        }, {
          id: 9,
          title: "The Hunger Games",
          author: "Suzanne Collins",
          sales: 23,
          year: 2008
        }, {
          id: 10,
          title: "Harry Potter and the Prisoner of Azkaban",
          author: "J.K. Rowling",
          sales: void 0,
          year: 1999
        }, {
          id: 11,
          title: "The Dukan Diet",
          author: "Pierre Dukan",
          sales: 10,
          year: 2000
        }, {
          id: 12,
          title: "Breaking Dawn",
          author: "Stephenie Meyer",
          sales: void 0,
          year: 2008
        }, {
          id: 13,
          title: "Lolita",
          author: "Vladimir Nabokov",
          sales: 50,
          year: 1955
        }, {
          id: 14,
          title: "And Then There Were None",
          author: "Agatha Christie",
          sales: 100,
          year: void 0
        }, {
          id: 15,
          title: "Steps to Christ",
          author: "Ellen G. White",
          sales: 60,
          year: null
        }, {
          id: 16,
          title: "Charlie and the Chocolate Factory",
          author: "Roald Dahl",
          sales: 13
        }
      ]);
      sales = xs.set([
        {
          id: "sales"
        }
      ]);
      by_author = xs.set([
        {
          id: "author"
        }
      ]);
      by_year = xs.set([
        {
          id: "year"
        }
      ]);
      books_sales_by_author = books_sales.aggregate(sales, by_author).order(by_author).ordered();
      books_sales_by_year = books_sales.aggregate(sales, by_year).order(by_year).ordered();
      aggregate_from = function(source, from, measures, dimensions, options) {
        return source.filter(from, options).aggregate(measures, dimensions, options).order(dimensions).ordered();
      };
      Pipelet.Compose('aggregate_from', aggregate_from);
      tolkien_books = function(book, options) {
        return book.author === 'J. R. R. Tolkien';
      };
      tolkien_sales_by_year = books_sales.aggregate_from(tolkien_books, sales, by_year);
      it('should group and order books_sales_by_author by author', function(done) {
        return books_sales_by_author._fetch_all(function(sales) {
          return check(done, function() {
            return expect(sales).to.be.eql([
              {
                author: "Agatha Christie",
                sales: 100,
                _count: 1
              }, {
                author: "Charles Dickens",
                sales: 200,
                _count: 1
              }, {
                author: "Dan Brown",
                sales: 119,
                _count: 2
              }, {
                author: "Ellen G. White",
                sales: 60,
                _count: 1
              }, {
                author: "J. R. R. Tolkien",
                sales: 250,
                _count: 2
              }, {
                author: "J.K. Rowling",
                sales: 0,
                _count: 1
              }, {
                author: "Paulo Coelho",
                sales: 65,
                _count: 1
              }, {
                author: "Pierre Dukan",
                sales: 10,
                _count: 1
              }, {
                author: "Roald Dahl",
                sales: 13,
                _count: 1
              }, {
                author: "Stephenie Meyer",
                sales: 0,
                _count: 1
              }, {
                author: "Stieg Larsson",
                sales: 30,
                _count: 1
              }, {
                author: "Suzanne Collins",
                sales: 23,
                _count: 1
              }, {
                author: "Vladimir Nabokov",
                sales: 50,
                _count: 1
              }, {
                author: "William Holmes McGuffey",
                sales: 125,
                _count: 1
              }
            ]);
          });
        });
      });
      it('should group and order books_sales_by_year by year', function(done) {
        return books_sales_by_year._fetch_all(function(sales) {
          return check(done, function() {
            return expect(sales).to.be.eql([
              {
                sales: 125,
                year: 1853,
                _count: 1
              }, {
                sales: 200,
                year: 1859,
                _count: 1
              }, {
                sales: 100,
                year: 1937,
                _count: 1
              }, {
                sales: 200,
                year: 1955,
                _count: 2
              }, {
                sales: 65,
                year: 1988,
                _count: 1
              }, {
                sales: 0,
                year: 1999,
                _count: 1
              }, {
                sales: 49,
                year: 2000,
                _count: 2
              }, {
                sales: 80,
                year: 2003,
                _count: 1
              }, {
                sales: 30,
                year: 2005,
                _count: 1
              }, {
                sales: 23,
                year: 2008,
                _count: 2
              }
            ]);
          });
        });
      });
      it('should group and order tolkien_sales_by_year by year', function(done) {
        return tolkien_sales_by_year._fetch_all(function(sales) {
          return check(done, function() {
            return expect(sales).to.be.eql([
              {
                sales: 100,
                year: 1937,
                _count: 1
              }, {
                sales: 150,
                year: 1955,
                _count: 1
              }
            ]);
          });
        });
      });
      describe('add sales for "Dan Brown" in 2004', function() {
        it('should increase books_sales_by_author for "Dan Brown"', function(done) {
          books_sales._add([
            {
              id: 17,
              title: "The Da Vinci Code",
              author: "Dan Brown",
              sales: 125,
              year: 2004
            }
          ]);
          return books_sales_by_author._fetch_all(function(sales) {
            return check(done, function() {
              return expect(sales).to.be.eql([
                {
                  author: "Agatha Christie",
                  sales: 100,
                  _count: 1
                }, {
                  author: "Charles Dickens",
                  sales: 200,
                  _count: 1
                }, {
                  author: "Dan Brown",
                  sales: 244,
                  _count: 3
                }, {
                  author: "Ellen G. White",
                  sales: 60,
                  _count: 1
                }, {
                  author: "J. R. R. Tolkien",
                  sales: 250,
                  _count: 2
                }, {
                  author: "J.K. Rowling",
                  sales: 0,
                  _count: 1
                }, {
                  author: "Paulo Coelho",
                  sales: 65,
                  _count: 1
                }, {
                  author: "Pierre Dukan",
                  sales: 10,
                  _count: 1
                }, {
                  author: "Roald Dahl",
                  sales: 13,
                  _count: 1
                }, {
                  author: "Stephenie Meyer",
                  sales: 0,
                  _count: 1
                }, {
                  author: "Stieg Larsson",
                  sales: 30,
                  _count: 1
                }, {
                  author: "Suzanne Collins",
                  sales: 23,
                  _count: 1
                }, {
                  author: "Vladimir Nabokov",
                  sales: 50,
                  _count: 1
                }, {
                  author: "William Holmes McGuffey",
                  sales: 125,
                  _count: 1
                }
              ]);
            });
          });
        });
        return it('should add books_sales_by_year for 2004', function(done) {
          return books_sales_by_year._fetch_all(function(sales) {
            return check(done, function() {
              return expect(sales).to.be.eql([
                {
                  sales: 125,
                  year: 1853,
                  _count: 1
                }, {
                  sales: 200,
                  year: 1859,
                  _count: 1
                }, {
                  sales: 100,
                  year: 1937,
                  _count: 1
                }, {
                  sales: 200,
                  year: 1955,
                  _count: 2
                }, {
                  sales: 65,
                  year: 1988,
                  _count: 1
                }, {
                  sales: 0,
                  year: 1999,
                  _count: 1
                }, {
                  sales: 49,
                  year: 2000,
                  _count: 2
                }, {
                  sales: 80,
                  year: 2003,
                  _count: 1
                }, {
                  sales: 125,
                  year: 2004,
                  _count: 1
                }, {
                  sales: 30,
                  year: 2005,
                  _count: 1
                }, {
                  sales: 23,
                  year: 2008,
                  _count: 2
                }
              ]);
            });
          });
        });
      });
      return describe("remove Stephenie Meyer's sales in 2008 and Pierre Dukan's sales in 2000", function() {
        it('should remove Stephenie Meyer and Pierre Dukan sales from books_sales_by_author', function(done) {
          books_sales._remove([
            {
              id: 11,
              title: "The Dukan Diet",
              author: "Pierre Dukan",
              sales: 10,
              year: 2000
            }, {
              id: 12,
              title: "Breaking Dawn",
              author: "Stephenie Meyer",
              sales: void 0,
              year: 2008
            }
          ]);
          return books_sales_by_author._fetch_all(function(sales) {
            return check(done, function() {
              return expect(sales).to.be.eql([
                {
                  author: "Agatha Christie",
                  sales: 100,
                  _count: 1
                }, {
                  author: "Charles Dickens",
                  sales: 200,
                  _count: 1
                }, {
                  author: "Dan Brown",
                  sales: 244,
                  _count: 3
                }, {
                  author: "Ellen G. White",
                  sales: 60,
                  _count: 1
                }, {
                  author: "J. R. R. Tolkien",
                  sales: 250,
                  _count: 2
                }, {
                  author: "J.K. Rowling",
                  sales: 0,
                  _count: 1
                }, {
                  author: "Paulo Coelho",
                  sales: 65,
                  _count: 1
                }, {
                  author: "Roald Dahl",
                  sales: 13,
                  _count: 1
                }, {
                  author: "Stieg Larsson",
                  sales: 30,
                  _count: 1
                }, {
                  author: "Suzanne Collins",
                  sales: 23,
                  _count: 1
                }, {
                  author: "Vladimir Nabokov",
                  sales: 50,
                  _count: 1
                }, {
                  author: "William Holmes McGuffey",
                  sales: 125,
                  _count: 1
                }
              ]);
            });
          });
        });
        return it('should remove 10 from sales in 2000 from books_sales_by_year', function(done) {
          return books_sales_by_year._fetch_all(function(sales) {
            return check(done, function() {
              return expect(sales).to.be.eql([
                {
                  sales: 125,
                  year: 1853,
                  _count: 1
                }, {
                  sales: 200,
                  year: 1859,
                  _count: 1
                }, {
                  sales: 100,
                  year: 1937,
                  _count: 1
                }, {
                  sales: 200,
                  year: 1955,
                  _count: 2
                }, {
                  sales: 65,
                  year: 1988,
                  _count: 1
                }, {
                  sales: 0,
                  year: 1999,
                  _count: 1
                }, {
                  sales: 39,
                  year: 2000,
                  _count: 1
                }, {
                  sales: 80,
                  year: 2003,
                  _count: 1
                }, {
                  sales: 125,
                  year: 2004,
                  _count: 1
                }, {
                  sales: 30,
                  year: 2005,
                  _count: 1
                }, {
                  sales: 23,
                  year: 2008,
                  _count: 1
                }
              ]);
            });
          });
        });
      });
    });
    return describe('xs.join() authors, books, and books_sales:', function() {
      var authors, books, books_sales, books_with_authors;
      authors = xs.set([
        {
          id: 1,
          name: "Charles Dickens"
        }, {
          id: 2,
          name: "J. R. R. Tolkien"
        }, {
          id: 3,
          name: "Dan Brown"
        }, {
          id: 4,
          name: "Paulo Coelho"
        }, {
          id: 5,
          name: "Stieg Larsson"
        }, {
          id: 6,
          name: "William Holmes McGuffey"
        }, {
          id: 7,
          name: "Suzanne Collins"
        }, {
          id: 8,
          name: "J.K. Rowling"
        }, {
          id: 9,
          name: "Pierre Dukan"
        }, {
          id: 10,
          name: "Stephenie Meyer"
        }, {
          id: 11,
          name: "Vladimir Nabokov"
        }, {
          id: 12,
          name: "Agatha Christie"
        }
      ], {
        name: 'authors'
      });
      books = xs.set([
        {
          id: 1,
          title: "A Tale of Two Cities",
          author_id: 1
        }, {
          id: 2,
          title: "The Lord of the Rings",
          author_id: 2
        }, {
          id: 3,
          title: "The Da Vinci Code",
          author_id: 3
        }, {
          id: 4,
          title: "The Alchemist",
          author_id: 4
        }, {
          id: 5,
          title: "Angels and Demons",
          author_id: 3
        }, {
          id: 6,
          title: "The Girl with the Dragon Tattoo",
          author_id: 5
        }, {
          id: 7,
          title: "The McGuffey Readers",
          author_id: 6
        }, {
          id: 8,
          title: "The Hobbit",
          author_id: 2
        }, {
          id: 9,
          title: "The Hunger Games",
          author_id: 7
        }, {
          id: 10,
          title: "Harry Potter and the Prisoner of Azkaban",
          author_id: 8
        }, {
          id: 11,
          title: "The Dukan Diet",
          author_id: 9
        }, {
          id: 12,
          title: "Breaking Dawn",
          author_id: 10
        }, {
          id: 13,
          title: "Lolita",
          author_id: 11
        }, {
          id: 14,
          title: "And Then There Were None",
          author_id: 12
        }, {
          id: 16,
          title: "Charlie and the Chocolate Factory",
          author_id: 14
        }
      ], {
        name: 'books'
      });
      books_with_authors = books.join(authors, [['author_id', 'id']], function(book, author) {
        if (author) {
          return extend({}, book, {
            author_name: author.name
          });
        } else {
          return book;
        }
      }, {
        left: true,
        name: 'books_with_authors'
      }).set();
      books_sales = xs.set([
        {
          book_id: 1,
          sales: 200,
          year: 1859
        }, {
          book_id: 2,
          sales: 150,
          year: 1955
        }, {
          book_id: 3,
          sales: 80,
          year: 2003
        }, {
          book_id: 4,
          sales: 65,
          year: 1988
        }, {
          book_id: 5,
          sales: 39,
          year: 2000
        }, {
          book_id: 6,
          sales: 30,
          year: 2005
        }, {
          book_id: 7,
          sales: 125,
          year: 1853
        }, {
          book_id: 8,
          sales: 100,
          year: 1937
        }, {
          book_id: 9,
          sales: 23,
          year: 2008
        }, {
          book_id: 10,
          sales: void 0,
          year: 1999
        }, {
          book_id: 11,
          sales: 10,
          year: 2000
        }, {
          book_id: 12,
          sales: void 0,
          year: 2008
        }, {
          book_id: 13,
          sales: 50,
          year: 1955
        }, {
          book_id: 14,
          sales: 100,
          year: void 0
        }, {
          book_id: 15,
          sales: 60,
          year: null
        }, {
          book_id: 16,
          sales: 13
        }
      ], {
        key: ['year', 'book_id'],
        name: 'books_sales'
      });
      it('should join books and authors', function(done) {
        return books_with_authors._fetch_all(function(values) {
          return check(done, function() {
            var found, result, v, _i, _len;
            found = true;
            result = xs.set([
              {
                id: 1,
                title: "A Tale of Two Cities",
                author_id: 1,
                author_name: "Charles Dickens"
              }, {
                id: 8,
                title: "The Hobbit",
                author_id: 2,
                author_name: "J. R. R. Tolkien"
              }, {
                id: 2,
                title: "The Lord of the Rings",
                author_id: 2,
                author_name: "J. R. R. Tolkien"
              }, {
                id: 3,
                title: "The Da Vinci Code",
                author_id: 3,
                author_name: "Dan Brown"
              }, {
                id: 5,
                title: "Angels and Demons",
                author_id: 3,
                author_name: "Dan Brown"
              }, {
                id: 4,
                title: "The Alchemist",
                author_id: 4,
                author_name: "Paulo Coelho"
              }, {
                id: 6,
                title: "The Girl with the Dragon Tattoo",
                author_id: 5,
                author_name: "Stieg Larsson"
              }, {
                id: 7,
                title: "The McGuffey Readers",
                author_id: 6,
                author_name: "William Holmes McGuffey"
              }, {
                id: 9,
                title: "The Hunger Games",
                author_id: 7,
                author_name: "Suzanne Collins"
              }, {
                id: 10,
                title: "Harry Potter and the Prisoner of Azkaban",
                author_id: 8,
                author_name: "J.K. Rowling"
              }, {
                id: 11,
                title: "The Dukan Diet",
                author_id: 9,
                author_name: "Pierre Dukan"
              }, {
                id: 12,
                title: "Breaking Dawn",
                author_id: 10,
                author_name: "Stephenie Meyer"
              }, {
                id: 13,
                title: "Lolita",
                author_id: 11,
                author_name: "Vladimir Nabokov"
              }, {
                id: 14,
                title: "And Then There Were None",
                author_id: 12,
                author_name: "Agatha Christie"
              }, {
                id: 16,
                title: "Charlie and the Chocolate Factory",
                author_id: 14
              }
            ], {
              key: ['id', 'title', 'author_id', 'author_name']
            });
            for (_i = 0, _len = values.length; _i < _len; _i++) {
              v = values[_i];
              if (result.index_of(v) !== -1) {
                continue;
              }
              found = false;
              break;
            }
            return expect(found).to.be(true);
          });
        });
      });
      return it('should add a joined author', function(done) {
        authors._add([
          {
            id: 13,
            name: "Ellen G. White"
          }, {
            id: 14,
            name: "Roald Dahl"
          }
        ]);
        books._add([
          {
            id: 15,
            title: "Steps to Christ",
            author_id: 13
          }
        ]);
        return books_with_authors._fetch_all(function(values) {
          return check(done, function() {
            var found, result, v, _i, _len;
            found = true;
            result = xs.set([
              {
                id: 1,
                title: "A Tale of Two Cities",
                author_id: 1,
                author_name: "Charles Dickens"
              }, {
                id: 8,
                title: "The Hobbit",
                author_id: 2,
                author_name: "J. R. R. Tolkien"
              }, {
                id: 2,
                title: "The Lord of the Rings",
                author_id: 2,
                author_name: "J. R. R. Tolkien"
              }, {
                id: 3,
                title: "The Da Vinci Code",
                author_id: 3,
                author_name: "Dan Brown"
              }, {
                id: 5,
                title: "Angels and Demons",
                author_id: 3,
                author_name: "Dan Brown"
              }, {
                id: 4,
                title: "The Alchemist",
                author_id: 4,
                author_name: "Paulo Coelho"
              }, {
                id: 6,
                title: "The Girl with the Dragon Tattoo",
                author_id: 5,
                author_name: "Stieg Larsson"
              }, {
                id: 7,
                title: "The McGuffey Readers",
                author_id: 6,
                author_name: "William Holmes McGuffey"
              }, {
                id: 9,
                title: "The Hunger Games",
                author_id: 7,
                author_name: "Suzanne Collins"
              }, {
                id: 10,
                title: "Harry Potter and the Prisoner of Azkaban",
                author_id: 8,
                author_name: "J.K. Rowling"
              }, {
                id: 11,
                title: "The Dukan Diet",
                author_id: 9,
                author_name: "Pierre Dukan"
              }, {
                id: 12,
                title: "Breaking Dawn",
                author_id: 10,
                author_name: "Stephenie Meyer"
              }, {
                id: 13,
                title: "Lolita",
                author_id: 11,
                author_name: "Vladimir Nabokov"
              }, {
                id: 14,
                title: "And Then There Were None",
                author_id: 12,
                author_name: "Agatha Christie"
              }, {
                id: 16,
                title: "Charlie and the Chocolate Factory",
                author_id: 14
              }, {
                id: 16,
                title: "Charlie and the Chocolate Factory",
                author_id: 14,
                author_name: "Roald Dahl"
              }, {
                id: 15,
                title: "Steps to Christ",
                author_id: 13,
                author_name: "Ellen G. White"
              }
            ], {
              key: ['id', 'title', 'author_id', 'author_name']
            });
            for (_i = 0, _len = values.length; _i < _len; _i++) {
              v = values[_i];
              if (result.index_of(v) !== -1) {
                continue;
              }
              found = false;
              break;
            }
            return expect(found).to.be(true);
          });
        });
      });
    });
  });

}).call(this);

//# sourceMappingURL=core.map

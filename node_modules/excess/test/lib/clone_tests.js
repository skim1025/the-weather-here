// Generated by CoffeeScript 1.7.1

/*
    clone_tests.coffee

    Copyright (C) 2013, 2014, Connected Sets

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as
    published by the Free Software Foundation, either version 3 of the
    License, or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

(function() {
  var check, clone, expect, utils;

  if (typeof require !== "undefined" && require !== null) {
    utils = require('./tests_utils.js');
  }

  expect = this.expect || utils.expect;

  clone = this.clone || utils.clone;

  check = this.check || utils.check;

  describe('Test utilities', function() {
    describe('clone():', function() {
      var bar, foo;
      foo = {
        id: 10,
        array: [
          1, 2, "a", "b", 3, {
            x: 10,
            y: void 0,
            z: null
          }
        ],
        obj: {
          coordinate: 1,
          label: "Coordinate",
          values: [24, null, void 0]
        }
      };
      bar = clone(foo);
      it('should deep clone foo into bar', function() {
        return expect(bar).to.be.eql(foo);
      });
      return it('should not return self', function() {
        return expect(bar).to.not.be(foo);
      });
    });
    return describe('Aynchronous test check()', function() {
      return it('should succeed in 50 ms', function(done) {
        return setTimeout((function() {
          return check(done, function() {
            return expect([]).to.be.eql([]);
          });
        }), 50);
      });
    });
  });

}).call(this);

//# sourceMappingURL=clone_tests.map
